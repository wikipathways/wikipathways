var pathvisioNS=pathvisioNS||{};pathvisioNS["src/pathvisiojs.html"]='<div id="pathvisiojs-container" style="width: inherit; height: inherit;">\n\n  <!-- **********************************************************************\n    Pathway Container (JavaScript inserts pathway image inside this div)\n    *********************************************************************** -->\n  <div id="diagram-container">\n  </div>\n\n  <!-- **********************************************************************\n    Highlight Element by Label Control\n    *********************************************************************** -->\n  <div id="typeahead">\n    <input id="highlight-by-label-input" placeholder="Enter node name to highlight" role="textbox" aria-autocomplete="list" aria-haspopup="true">\n    <i id="clear-highlights-from-typeahead" class="control-icon icon-remove"></i>\n  </div> \n\n  <!-- **********************************************************************\n    Pan/Zoom Controls \n    *********************************************************************** -->\n  <div id="pan-zoom-control" class="pan-zoom-controls">                           \n    <!-- TODO get this working\n    <i id="zoom-in" class="control-icon pan-zoom-control-icon glyphicon glyphicon-plus-sign"></i>\n    -->\n    <img id="reset-pan-zoom" class="control-icon" src="/wpi/extensions/PathwayViewer/img/fitscreen_icon.png"></i>\n    <!-- TODO get this working\n    <i id="zoom-out" class="control-icon pan-zoom-control-icon glyphicon glyphicon-minus-sign"></i>\n    -->\n    <!-- TODO get this working\n    <i id="full-screen-control" class="control-icon pan-zoom-control-icon glyphicon glyphicon-fullscreen"></i>\n    -->\n  </div>\n\n  <div id="viewer-toolbar">\n  </div>\n\n  <!-- **********************************************************************\n    Details Frame\n    *********************************************************************** -->\n  <div id="annotation" class="annotation ui-draggable">\n    <header class="annotation-header">\n      <span id="annotation-move" class="annotation-header-move">\n        <i class="icon-move"></i>\n      </span>\n      <span class="annotation-header-close" class="annotation-header-close">\n        <i class="icon-remove"></i>\n      </span>   \n      <span id="annotation-header-text" class="annotation-header-text">\n        Header\n      </span> \n      <span id="annotation-header-search" class="annotation-header-search" title="Search for pathways containing \'Header Text\'">\n        <a href="http://wikipathways.org//index.php?title=Special:SearchPathways">\n          <i class="icon-search"></i>\n        </a>\n      </span>\n      <div id="annotation-description" class="annotation-description">\n        <h2>description</h2>\n      </div>\n    </header>\n    <span class="annotation-items-container" class="annotation-items-container">\n      <ul id="annotation-items-container">\n        <!-- List items inside this ul element are generated automatically by JavaScript.\n            Each item will be composed of a title and text. The text can be set to be an href.\n            You can edit the styling of the title by editing CSS class "annotation-item-title"\n            and the styling of the text by editing CSS class "annotation-item-text.\n            -->\n      </ul>\n    </span>\n  </div>\n</div>\n',pathvisioNS["src/css/pathway-diagram.css"]="	svg {\n		color-interpolation: auto;\n		image-rendering: auto;\n		shape-rendering: auto;\n		vector-effect: non-scaling-stroke;\n                background: white;\n	/* removed fill and stroke since they override marker specs */\n	/*	fill: white;\n    		stroke: black; */\n	}\n\n	/* default color for pathway elements */\n	.default-fill-color {\n		fill: black; \n	}\n	.default-stroke-color {\n		stroke: black;\n	}\n	\n	/* default color of the background drawing board */ 	\n	.board-fill-color {\n		fill: white;\n	}\n	.board-stroke-color {\n		stroke: white;\n	}\n\n	.text-area {\n		font-family: Sans-Serif, Helvetica, Arial;\n		text-align: center;\n		vertical-align: middle;\n		font-size: 10px;\n		fill: black;\n		fill-opacity: 1;\n		stroke: none;\n	}\n\n	.citation {\n		font-family: Sans-Serif, Helvetica, Arial;\n		text-align: center;\n		vertical-align: top;\n		font-size: 7px;\n		fill: #999999;\n		fill-opacity: 1;\n		stroke: none;\n	}\n\n	.info-box {\n		font-family: Sans-Serif;\n		font-size: 10px;\n		fill: black;\n		stroke: none;\n		text-align: left;\n		vertical-align: top;\n	}\n\n	.info-box-item-property-name {\n		font-weight: bold;\n	}\n\n	.info-box-item-property-value {\n	}\n\n	.data-node {\n		text-align: right;\n		fill-opacity: 1;\n		fill: white;\n		stroke: black;\n		stroke-width: 1;\n		stroke-dasharray: 0;\n		stroke-miterlimit: 1;\n    		pointer-events:auto;\n	}\n	.data-node:hover {\n	 	cursor: pointer;\n	}\n	\n	.has-xref:hover {\n		cursor: pointer;\n	}\n\n	.data-node.gene-product {\n	}\n\n	.metabolite {\n		stroke: blue;\n	}\n\n	.data-node.metabolite > .text-area {\n		fill: blue;\n		fill-opacity: 1;\n		stroke: none;\n	}\n\n	.data-node.pathway {\n		stroke: none;\n		fill-opacity: 0;\n	}\n\n	.data-node.pathway > .text-area {\n		fill: rgb(20,150,30);\n		fill-opacity: 1;\n		font-size: 12px;\n		font-weight: bold;\n	}\n\n	.data-node.protein {\n	}\n\n	.data-node.rna {\n	}\n\n	.data-node.unknown {\n	}\n\n	.label {\n		stroke: null;\n		stroke-width: 0;\n		fill-opacity: 0;\n		stroke-dasharray: 0;\n		stroke-miterlimit: 1;\n	}\n\n	.shape {\n		fill-opacity: 0;\n		stroke: black;\n		stroke-dasharray: 0;\n		stroke-miterlimit: 1;\n	}\n\n	.shape.none {\n		fill: none;\n		fill-opacity: 0;\n		stroke: none;\n	}\n\n	g.group-node > .shape {\n		fill-opacity: 0.098;\n		stroke: gray;\n		stroke-miterlimit: 1;\n		stroke-width: 1px;\n    		pointer-events:none;\n	}\n\n	.group-node {\n		fill-opacity: 0.098;\n		stroke: gray;\n		stroke-miterlimit: 1;\n		stroke-width: 1px;\n    		pointer-events:none;\n	}\n\n	.group-node > .text-area {\n		fill-opacity: 0.4;\n		font-family: Serif, Times;\n		font-size: 32px;\n		fill: black;\n		stroke-width: 0;\n		font-weight: bold;\n  	}	\n\n	.group-node.none {\n		fill: rgb(180,180,100);\n		stroke-dasharray: 5,3;\n	}\n\n	.group-node.none > .text-area {\n		display: none;\n  	}	\n\n	/*.group-node.none:hover {\n		fill: rgb(255,180,100);\n		fill-opacity: 0.05;\n	}*/\n\n	.group-node.group {\n		fill-opacity: 0;\n		stroke: none;\n	}\n\n	.group-node.group > .text-area {\n		display: none;\n  	}\n	/*.group-node.group:hover {\n		fill: rgb(0,0,255);\n		stroke-width: 1px;\n		stroke-dasharray: 5,3;\n		stroke: gray;\n		fill-opacity: 0.1;\n	}*/\n\n	.group-node.complex {\n		fill: rgb(180,180,100);\n	}\n\n	.group-node.complex > .text-area {\n		display: none;\n  	}\n	/*.group-node.complex:hover {\n		fill: rgb(255,0,0);\n		fill-opacity: 0.05;\n	}*/	\n\n  	.group-node.pathway {\n		fill: rgb(0,255,0);\n		stroke-dasharray: 5,3;\n	}\n	/*.group-node.pathway:hover {\n		fill: rgb(0,255,0);\n		fill-opacity: 0.2;\n	}*/\n	.group-node.pathway > .text-area {\n		fill: rgb(20,150,30);\n		stroke: rgb(20,150,30);\n  }\n\n  .cellular-component {\n		fill-opacity: 0;\n		stroke: silver;\n	}\n\n  .graphical-line {\n		fill:none;\n		stroke: black; \n		stroke-width: 1px; \n	}\n\n	.interaction {\n		fill:none;\n		stroke: black; \n		stroke-width: 1px; \n	}\n\n	marker {\n		/* this is what should work per the spec\n		   stroke-dasharray: none; */\n		/* but I need to add this to make it work in Safari */\n		stroke-dasharray: 9999999999999999999999999;\n	}\n\n  .marker-end {\n    -webkit-transform: rotate(180deg);\n    -webkit-transform-origin: 50% 50%;\n\n    -o-transform: rotate(180deg); \n    -o-transform-origin: 50% 50%;\n\n    transform: rotate(180deg);\n    transform-origin: 50% 50%;\n  }\n\n	.solid-stroke {\n		/* this is what should work per the spec\n		   stroke-dasharray: none; */\n		/* but I need to add this to make it work in Safari */\n		stroke-dasharray: 9999999999999999999999999;\n	}\n\n	.dashed-stroke {\n		stroke-dasharray: 5,3;\n	}\n\n  .highlighted-node {\n		fill: yellow;\n    fill-opacity: 0.2;\n		stroke: orange; \n    stroke-width: 3px;\n  }\n",pathvisioNS["tmp/pathvisiojs.svg"]='<svg id="pathvisiojs-diagram" version="1.1" baseProfile="full" xmlns="http://www.w3.org/1999/xlink" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events" width="100%" height="100%" style="display: inline; width: inherit; min-width: inherit; max-width: inherit; height: inherit; min-height: inherit; max-height: inherit; " preserveAspectRatio="xMidYMid" onmouseup="svgPanZoom.handleMouseUp(evt)" onmousedown="svgPanZoom.handleMouseDown(evt)" onmousemove="svgPanZoom.handleMouseMove(evt)" onmouseleave="svgPanZoom.handleMouseUp(evt)" xlink="http://www.w3.org/1999/xlink" ev="http://www.w3.org/2001/xml-events"><g><desc>This SVG file contains all the graphical elements (markers and symbols in defs as well as\nstyle data) used by the program pathvisiojs, which has two components:\n1) a viewer for transforming GPML biological pathway data into an SVG visual representation and\n2) an editor for creating both views and models for biological pathways.</desc></g><title>pathvisiojs diagram</title><defs><marker id="shape-library-markers-arrow-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-arrow-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- arrow markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-arrow-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-arrow-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- arrow markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-necessary-stimulation-svg-start-default" preserveAspectRatio="none" viewBox="0 0 16 12" markerWidth="16" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-necessary-stimulation-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-necessary-stimulation markers: triangular polygons, drawing-board fill, default color stroke; and vertical line -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line fill="none" stroke-width="1" x1="14" y1="0" x2="14" y2="12"></line>\n	<line fill="none" stroke="none" x1="16" y1="6" x2="16" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 9,11 9,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-necessary-stimulation-svg-end-default" preserveAspectRatio="none" viewBox="0 0 16 12" markerWidth="16" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="16" refY="6"><g id="g-src-shape-library-markers-mim-necessary-stimulation-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 8, 6)">\n\n	<!-- mim-necessary-stimulation markers: triangular polygons, drawing-board fill, default color stroke; and vertical line -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line fill="none" stroke-width="1" x1="14" y1="0" x2="14" y2="12"></line>\n	<line fill="none" stroke="none" x1="16" y1="6" x2="16" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 9,11 9,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-binding-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-binding-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- mim-binding markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-binding-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-binding-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- mim-binding markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-conversion-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-conversion-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- mim-conversion markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-conversion-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-conversion-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- mim-conversion markers: triangular polygons, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,11 0,6 12,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-stimulation-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-stimulation-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-stimulation markers: triangular polygons, drawing-board fill, default color stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line stroke="none" fill="none" x1="12" y1="6" x2="12" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 11,11 11,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-stimulation-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-stimulation-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-stimulation markers: triangular polygons, drawing-board fill, default color stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<line stroke="none" fill="none" x1="12" y1="6" x2="12" y2="6"></line> <!-- dummy point -->\n	<polygon stroke-width="1" points="0,6 11,11 11,1"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-modification-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-modification-svg-start-default" class="default-fill-color solid-stroke">\n\n	<!-- mim-modification markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-modification-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-modification-svg-end-default" class="default-fill-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-modification markers: four-point polygon, no stroke -->\n\n	<rect class="board-fill-color" stroke="none" x="0" y="5.4" width="2" height="1.2"></rect>\n	<polygon stroke-width="0" points="12,12 0,6 12,0 5,6 "></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-catalysis-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-catalysis-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-catalysis markers: circle, drawing-board fill and default color stroke -->\n\n	<circle cx="6.0" cy="6" r="5.3px" stroke-width="1px"></circle>\n\n</g></marker><marker id="shape-library-markers-mim-catalysis-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-catalysis-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-catalysis markers: circle, drawing-board fill and default color stroke -->\n\n	<circle cx="6.0" cy="6" r="5.3px" stroke-width="1px"></circle>\n\n</g></marker><marker id="shape-library-markers-mim-inhibition-svg-start-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="0" refY="10"><g id="g-src-shape-library-markers-mim-inhibition-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-inhibition markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-mim-inhibition-svg-end-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="10" refY="10"><g id="g-src-shape-library-markers-mim-inhibition-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 5, 10)">\n\n	<!-- mim-inhibition markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-mim-cleavage-svg-start-default" preserveAspectRatio="none" viewBox="0 0 20 30" markerWidth="20" markerHeight="30" markerUnits="strokeWidth" orient="auto" refX="9" refY="15"><g id="g-src-shape-library-markers-mim-cleavage-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-cleavage markers: two lines and extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="14.3" width="18.4" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="18" y1="14.5" x2="18" y2="30"></line>	\n	<line fill="none" stroke-width="1" x1="18" y1="30" x2="0" y2="0"></line>	\n\n\n</g></marker><marker id="shape-library-markers-mim-cleavage-svg-end-default" preserveAspectRatio="none" viewBox="0 0 20 30" markerWidth="20" markerHeight="30" markerUnits="strokeWidth" orient="auto" refX="10" refY="15"><g id="g-src-shape-library-markers-mim-cleavage-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 10, 15)">\n\n	<!-- mim-cleavage markers: two lines and extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="14.3" width="18.4" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="18" y1="14.5" x2="18" y2="30"></line>	\n	<line fill="none" stroke-width="1" x1="18" y1="30" x2="0" y2="0"></line>	\n\n\n</g></marker><marker id="shape-library-markers-mim-covalent-bond-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="-0.5" refY="6"><g id="g-src-shape-library-markers-mim-covalent-bond-svg-start-default" class="solid-stroke default-fill-color">\n\n	<!-- mim-covalent-bond markers: not much to see here! -->\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-covalent-bond-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="11" refY="6"><g id="g-src-shape-library-markers-mim-covalent-bond-svg-end-default" class="solid-stroke default-fill-color" transform="rotate(180, 6, 6)">\n\n	<!-- mim-covalent-bond markers: not much to see here! -->\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-transcription-translation-svg-start-default" preserveAspectRatio="none" viewBox="0 0 20 24" markerWidth="20" markerHeight="24" markerUnits="strokeWidth" orient="auto" refX="0" refY="12"><g id="g-src-shape-library-markers-mim-transcription-translation-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-transcription-translation markers: two lines and an open trigular polygon, plus extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="11" width="12" height="2"></rect>\n	<line fill="none" stroke-width="1" x1="15" y1="12" x2="15" y2="5"></line>\n	<line fill="none" stroke-width="1" x1="15.5" y1="5" x2="8" y2="5"></line>\n	<polygon stroke-width="1" points="0,5 8,1 8,9"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-transcription-translation-svg-end-default" preserveAspectRatio="none" viewBox="0 0 20 24" markerWidth="20" markerHeight="24" markerUnits="strokeWidth" orient="auto" refX="20" refY="12"><g id="g-src-shape-library-markers-mim-transcription-translation-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 10, 12)">\n\n	<!-- mim-transcription-translation markers: two lines and an open trigular polygon, plus extended drawing-board rect -->\n\n	<rect stroke="none" x="0" y="11" width="12" height="2"></rect>\n	<line fill="none" stroke-width="1" x1="15" y1="12" x2="15" y2="5"></line>\n	<line fill="none" stroke-width="1" x1="15.5" y1="5" x2="8" y2="5"></line>\n	<polygon stroke-width="1" points="0,5 8,1 8,9"></polygon>\n\n</g></marker><marker id="shape-library-markers-mim-gap-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-mim-gap-svg-start-default" class="board-fill-color solid-stroke">\n\n	<!-- mim-gap markers: just an extended drawing-board rect -->\n	<!-- \n	TODO This could be refactored to make the shape match the viewbox.\n	It can overlap the side of the shape, blanking out a small part of it when the edge is at an angle.\n	-->\n\n	<rect stroke="none" x="0" y="5.3" width="8" height="1.4"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-gap-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="12" refY="6"><g id="g-src-shape-library-markers-mim-gap-svg-end-default" class="board-fill-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-gap markers: just an extended drawing-board rect -->\n	<!-- \n	TODO This could be refactored to make the shape match the viewbox.\n	It can overlap the side of the shape, blanking out a small part of it when the edge is at an angle.\n	-->\n\n	<rect stroke="none" x="0" y="5.3" width="8" height="1.4"></rect>\n\n</g></marker><marker id="shape-library-markers-t-bar-svg-start-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="0" refY="10"><g id="g-src-shape-library-markers-t-bar-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n        <!-- t-bar markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-t-bar-svg-end-default" preserveAspectRatio="none" viewBox="0 0 10 20" markerWidth="10" markerHeight="20" markerUnits="strokeWidth" orient="auto" refX="10" refY="10"><g id="g-src-shape-library-markers-t-bar-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 5, 10)">\n\n        <!-- t-bar markers: vertical line; and extended drawing-board rect -->\n	\n	<rect stroke="none" x="0" y="9" width="8" height="2"></rect>\n	<line fill="none" stroke-width="1.8" x1="7" y1="0" x2="7" y2="20"></line>\n\n</g></marker><marker id="shape-library-markers-none-svg-start-default" preserveAspectRatio="none" viewBox="0 0 0 0" markerWidth="0" markerHeight="0" markerUnits="strokeWidth" orient="auto" refX="0" refY="6"><g id="g-src-shape-library-markers-none-svg-start-default" class="board-fill-color board-stroke-color node shape">\n\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-none-svg-end-default" preserveAspectRatio="none" viewBox="0 0 0 0" markerWidth="0" markerHeight="0" markerUnits="strokeWidth" orient="auto" refX="11" refY="6"><g id="g-src-shape-library-markers-none-svg-end-default" class="board-fill-color board-stroke-color node shape" transform="rotate(180, 0, 0)">\n\n	<rect x="0" y="0" width="0" height="0" stroke="none" fill="none" stroke-width="0"></rect>\n\n</g></marker><marker id="shape-library-markers-mim-branching-left-svg-start-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0.4" refY="6"><g id="g-src-shape-library-markers-mim-branching-left-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-branching-left markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="3.9" y1="6.2" x2="0.2" y2="0"></line>	\n\n</g></marker><marker id="shape-library-markers-mim-branching-left-svg-end-default" preserveAspectRatio="none" viewBox="0 0 12 12" markerWidth="12" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="11.6" refY="6"><g id="g-src-shape-library-markers-mim-branching-left-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 6, 6)">\n\n	<!-- mim-branching-left markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="3.9" y1="6.2" x2="0.2" y2="0"></line>	\n\n</g></marker><marker id="shape-library-markers-mim-branching-right-svg-start-default" preserveAspectRatio="none" viewBox="0 0 4 12" markerWidth="4" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="0.4" refY="6"><g id="g-src-shape-library-markers-mim-branching-right-svg-start-default" class="board-fill-color default-stroke-color solid-stroke">\n\n	<!-- mim-branching-right markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="0.2" y1="12" x2="3.9" y2="5.8"></line>	\n\n</g></marker><marker id="shape-library-markers-mim-branching-right-svg-end-default" preserveAspectRatio="none" viewBox="0 0 4 12" markerWidth="4" markerHeight="12" markerUnits="strokeWidth" orient="auto" refX="3.6" refY="6"><g id="g-src-shape-library-markers-mim-branching-right-svg-end-default" class="board-fill-color default-stroke-color solid-stroke" transform="rotate(180, 2, 6)">\n\n	<!-- mim-branching-right markers: line and extended drawing-board rect -->\n\n	<rect stroke="none" x="0.4" y="5.3" width="3.1" height="1.4"></rect>\n	<line fill="none" stroke-width="1" x1="0.2" y1="12" x2="3.9" y2="5.8"></line>	\n\n</g></marker><style type="text/css">	svg {\n		color-interpolation: auto;\n		image-rendering: auto;\n		shape-rendering: auto;\n		vector-effect: non-scaling-stroke;\n                background: white;\n	/* removed fill and stroke since they override marker specs */\n	/*	fill: white;\n    		stroke: black; */\n	}\n\n	/* default color for pathway elements */\n	.default-fill-color {\n		fill: black; \n	}\n	.default-stroke-color {\n		stroke: black;\n	}\n	\n	/* default color of the background drawing board */ 	\n	.board-fill-color {\n		fill: white;\n	}\n	.board-stroke-color {\n		stroke: white;\n	}\n\n	.text-area {\n		font-family: Sans-Serif, Helvetica, Arial;\n		text-align: center;\n		vertical-align: middle;\n		font-size: 10px;\n		fill: black;\n		fill-opacity: 1;\n		stroke: none;\n	}\n\n	.citation {\n		font-family: Sans-Serif, Helvetica, Arial;\n		text-align: center;\n		vertical-align: top;\n		font-size: 7px;\n		fill: #999999;\n		fill-opacity: 1;\n		stroke: none;\n	}\n\n	.info-box {\n		font-family: Sans-Serif;\n		font-size: 10px;\n		fill: black;\n		stroke: none;\n		text-align: left;\n		vertical-align: top;\n	}\n\n	.info-box-item-property-name {\n		font-weight: bold;\n	}\n\n	.info-box-item-property-value {\n	}\n\n	.data-node {\n		text-align: right;\n		fill-opacity: 1;\n		fill: white;\n		stroke: black;\n		stroke-width: 1;\n		stroke-dasharray: 0;\n		stroke-miterlimit: 1;\n    		pointer-events:auto;\n	}\n	.data-node:hover {\n	 	cursor: pointer;\n	}\n	\n	.has-xref {\n	}\n\n	.data-node.gene-product {\n	}\n\n	.metabolite {\n		stroke: blue;\n	}\n\n	.data-node.metabolite &gt; .text-area {\n		fill: blue;\n		fill-opacity: 1;\n		stroke: none;\n	}\n\n	.data-node.pathway {\n		stroke: none;\n		fill-opacity: 0;\n	}\n\n	.data-node.pathway &gt; .text-area {\n		fill: rgb(20,150,30);\n		fill-opacity: 1;\n		font-size: 12px;\n		font-weight: bold;\n	}\n\n	.data-node.protein {\n	}\n\n	.data-node.rna {\n	}\n\n	.data-node.unknown {\n	}\n\n	.label {\n		stroke: null;\n		stroke-width: 0;\n		fill-opacity: 0;\n		stroke-dasharray: 0;\n		stroke-miterlimit: 1;\n	}\n\n	.shape {\n		fill-opacity: 0;\n		stroke: black;\n		stroke-dasharray: 0;\n		stroke-miterlimit: 1;\n	}\n\n	.shape.none {\n		fill: none;\n		fill-opacity: 0;\n		stroke: none;\n	}\n\n	g.group-node &gt; .shape {\n		fill-opacity: 0.098;\n		stroke: gray;\n		stroke-miterlimit: 1;\n		stroke-width: 1px;\n    		pointer-events:none;\n	}\n\n	.group-node {\n		fill-opacity: 0.098;\n		stroke: gray;\n		stroke-miterlimit: 1;\n		stroke-width: 1px;\n    		pointer-events:none;\n	}\n\n	.group-node &gt; .text-area {\n		fill-opacity: 0.4;\n		font-family: Serif, Times;\n		font-size: 32px;\n		fill: black;\n		stroke-width: 0;\n		font-weight: bold;\n  	}	\n\n	.group-node.none {\n		fill: rgb(180,180,100);\n		stroke-dasharray: 5,3;\n	}\n\n	.group-node.none &gt; .text-area {\n		display: none;\n  	}	\n\n	/*.group-node.none:hover {\n		fill: rgb(255,180,100);\n		fill-opacity: 0.05;\n	}*/\n\n	.group-node.group {\n		fill-opacity: 0;\n		stroke: none;\n	}\n\n	.group-node.group &gt; .text-area {\n		display: none;\n  	}\n	/*.group-node.group:hover {\n		fill: rgb(0,0,255);\n		stroke-width: 1px;\n		stroke-dasharray: 5,3;\n		stroke: gray;\n		fill-opacity: 0.1;\n	}*/\n\n	.group-node.complex {\n		fill: rgb(180,180,100);\n	}\n\n	.group-node.complex &gt; .text-area {\n		display: none;\n  	}\n	/*.group-node.complex:hover {\n		fill: rgb(255,0,0);\n		fill-opacity: 0.05;\n	}*/	\n\n  	.group-node.pathway {\n		fill: rgb(0,255,0);\n		stroke-dasharray: 5,3;\n	}\n	/*.group-node.pathway:hover {\n		fill: rgb(0,255,0);\n		fill-opacity: 0.2;\n	}*/\n	.group-node.pathway &gt; .text-area {\n		fill: rgb(20,150,30);\n		stroke: rgb(20,150,30);\n  }\n\n  .cellular-component {\n		fill-opacity: 0;\n		stroke: silver;\n	}\n\n  .graphical-line {\n		fill:none;\n		stroke: black; \n		stroke-width: 1px; \n	}\n\n	.interaction {\n		fill:none;\n		stroke: black; \n		stroke-width: 1px; \n	}\n\n	marker {\n		/* this is what should work per the spec\n		   stroke-dasharray: none; */\n		/* but I need to add this to make it work in Safari */\n		stroke-dasharray: 9999999999999999999999999;\n	}\n\n  .marker-end {\n    -webkit-transform: rotate(180deg);\n    -webkit-transform-origin: 50% 50%;\n\n    -o-transform: rotate(180deg); \n    -o-transform-origin: 50% 50%;\n\n    transform: rotate(180deg);\n    transform-origin: 50% 50%;\n  }\n\n	.solid-stroke {\n		/* this is what should work per the spec\n		   stroke-dasharray: none; */\n		/* but I need to add this to make it work in Safari */\n		stroke-dasharray: 9999999999999999999999999;\n	}\n\n	.dashed-stroke {\n		stroke-dasharray: 5,3;\n	}\n\n  .highlighted-node {\n		fill: yellow;\n    fill-opacity: 0.2;\n		stroke: orange; \n    stroke-width: 3px;\n  }\n</style></defs><filter id="highlight" width="150%" height="150%"><feOffset result="offOut" in="SourceGraphic" dx="30" dy="30"></feOffset><feGaussianBlur result="blurOut" in="offOut" stdDeviation="10"></feGaussianBlur><feBlend in="SourceGraphic" in2="blurOut" mode="normal"></feBlend></filter><g id="viewport" transform="matrix(0.6710888444694338, 0, 0, 0.6710888444694338, 364.8176552543344, 20) "></g></svg>\n',function(){window.console||(window.console={});
for(var m=["log","info","warn","error","debug","trace","dir","group","groupCollapsed","groupEnd","time","timeEnd","profile","profileEnd","dirxml","assert","count","markTimeline","timeStamp","clear"],i=0;i<m.length;i++)window.console[m[i]]||(window.console[m[i]]=function(){})}();var pathvisiojs=function(){"use strict";function load(args){if(!args.container)throw new Error("No container selector specified to indicate where to insert the diagram.");if(!args.sourceData[0].uri)throw new Error("No sourceData uri specified.");var configArray=d3.map(pathvisiojs.config).entries(),updateConfigsAsNeeded=function(configElement,callback){args.hasOwnProperty(configElement.key)&&(pathvisiojs.config[configElement.key]=args[configElement.key]),callback(null)};async.each(configArray,updateConfigsAsNeeded,function(){pathvisiojs.view.pathwayDiagram.load(args)})}return{load:load}}();pathvisiojs.utilities=function(){"use strict";function collect(){for(var ret={},len=arguments.length,i=0;len>i;i++)for(var p in arguments[i])arguments[i].hasOwnProperty(p)&&(ret[p]=arguments[i][p]);return ret}function clone(src){function mixin(dest,source,copyFunc){var name,s,empty={};for(name in source)s=source[name],name in dest&&(dest[name]===s||name in empty&&empty[name]===s)||(dest[name]=copyFunc?copyFunc(s):s);return dest}if(!src||"object"!=typeof src||"[object Function]"===Object.prototype.toString.call(src))return src;if(src.nodeType&&"cloneNode"in src)return src.cloneNode(!0);if(src instanceof Date)return new Date(src.getTime());if(src instanceof RegExp)return new RegExp(src);var r,i,l;if(src instanceof Array)for(r=[],i=0,l=src.length;l>i;++i)i in src&&r.push(clone(src[i]));else r=src.constructor?new src.constructor:{};return mixin(r,src,clone)}function cloneNode(selector){var node=d3.select(selector).node();return d3.select(node.parentNode.insertBefore(node.cloneNode(!0),node.nextSibling))}function convertToArray(object){var array=null;return"Object"===getObjectType(object)?(array=[],array.push(object),array):"Array"===getObjectType(object)?object:"String"===getObjectType(object)?(array=[],array.push(object),array):void 0}function getObjectType(object){var result;return"[object Object]"===Object.prototype.toString.call(object)?result="Object":"[object Array]"===Object.prototype.toString.call(object)?result="Array":"[object String]"===Object.prototype.toString.call(object)&&(result="String"),result}function getTextDirection(text){var direction,x=new RegExp("[\0-]+"),isAscii=x.test(text);return direction=isAscii?"ltr":"rtl"}function getUriParam(name){var parameter=decodeURIComponent((new RegExp("[?|&]"+name+"="+"([^&;]+?)(&|#|;|$)").exec(location.search)||[,""])[1].replace(/\+/g,"%20"))||null;return parameter?parameter:(console.warn('Warning: URL parameter "'+name+'" is null.'),null)}function getWindowDimensions(){var winW=630,winH=460;return document.body&&document.body.width&&(winW=document.body.width,winH=document.body.height),"CSS1Compat"==document.compatMode&&document.documentElement&&document.documentElement.width&&(winW=document.documentElement.width,winH=document.documentElement.height),window.innerWidth&&window.innerHeight&&(winW=window.innerWidth,winH=window.innerHeight),{width:winW,height:winH}}function intersect(a,b){for(var res=[],i=0;i<a.length;i++)b.indexOf(a[i])>-1&&res.push(a[i]);return res}function isIE(){var myNav=navigator.userAgent.toLowerCase();return-1!=myNav.indexOf("msie")?parseInt(myNav.split("msie")[1]):!1}function isUri(str){var uriPattern=/(?:(?=[\s`!()\[\]{};:'".,<>?«»“”‘’])|\b)((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/|[a-z0-9.\-]+[.](?:com|org|net))(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))*(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]|\b))/gi;return uriPattern.test(str)}function isNumber(n){return!isNaN(parseFloat(n))&&isFinite(n)}function isWikiPathwaysId(data){return data=data.trim(),"WP"===data.substr(0,2).toUpperCase()&&isNumber(data.substr(data.length-1))?!0:!1}function loadScripts(array,callback){var loader=function(src,handler){var script=document.createElement("script");script.src=src,script.onload=script.onreadystatechange=function(){script.onreadystatechange=script.onload=null,/MSIE ([6-9]+\.\d+);/.test(navigator.userAgent)?window.setTimeout(function(){handler()},8,this):handler()};var head=document.getElementsByTagName("head")[0];(head||document.body).appendChild(script)};!function(){0!=array.length?loader(array.shift(),arguments.callee):callback&&callback()}()}function moveArrayItem(arr,old_index,new_index){if(new_index>=arr.length)for(var k=new_index-arr.length;k--+1;)arr.push(void 0);return arr.splice(new_index,0,arr.splice(old_index,1)[0]),arr}function splitStringByNewLine(str){return str.split(/\r\n|\r|\n/g)}function strToHtmlId(str){var re=/\W/gi,id=str.replace(re,"");return id}Element.prototype.getElementWidth=function(){return"undefined"!=typeof this.clip?this.clip.width:this.style.pixelWidth?this.style.pixelWidth:this.width},Element.prototype.getElementHeight=function(){return"undefined"!=typeof this.clip?this.clip.width:this.style.pixelHeight?this.style.pixelHeight:this.height};var isOdd=function(num){return num%2};return{clone:clone,cloneNode:cloneNode,collect:collect,convertToArray:convertToArray,getObjectType:getObjectType,getTextDirection:getTextDirection,getUriParam:getUriParam,getWindowDimensions:getWindowDimensions,isIE:isIE,intersect:intersect,isNumber:isNumber,isOdd:isOdd,isUri:isUri,isWikiPathwaysId:isWikiPathwaysId,loadScripts:loadScripts,moveArrayItem:moveArrayItem,splitStringByNewLine:splitStringByNewLine,strToHtmlId:strToHtmlId}}(),pathvisiojs.config={},pathvisiojs.config.gpmlSourceUriStub="/wpi/wpi.php?action=downloadFile&type=gpml&pwTitle=Pathway:",pathvisiojs.config.bridgedbLinkOutsUriStub="/wpi/extensions/bridgedb.php/",pathvisiojs.config.bridgedbDatasources="/wpi/extensions/PathwayViewer/datasources.txt",pathvisiojs.config.diagramLoadingIconUri="/wpi/extensions/PathwayViewer/img/loading.gif",pathvisiojs.config.diagramNotAvailableIconUri="/wpi/extensions/PathwayViewer/img/imageNotAvailable.jpg",pathvisiojs.config.imgDiagramUriStub="/wpi.php?action=downloadFile&type=png&pwTitle=Pathway:",pathvisiojs.config.pathwaySearchUriStub="/index.php?title=Special:SearchPathways&doSearch=1&query=",pathvisiojs.data=function(){"use strict";function get(sourceData,callback){var uri=sourceData.uri;sourceData.object;var fileType=sourceData.fileType;if(!uri)return new Error("No uri specified.");if(!fileType)return new Error("No fileType specified.");if("gpml"!==fileType)throw new Error("Cannot get jGpml from the specified input.");pathvisiojs.data.gpml.get(sourceData,function(gpml){pathvisiojs.data.gpml.toPvjson(gpml,uri,function(json){callback(json)})})}return{get:get}}(),pathvisiojs.data.bridgedb=function(){"use strict";function getXrefAnnotationDataByDataNode(singleSpecies,id,datasource,label,desc,callback){if(null==id||null==datasource){var annotationData={header:label,description:desc,listItems:["Missing ID and datasource"]};callback(annotationData)}else getDataSources(function(dataSources){var dataSourceRowCorrespondingToDataNodeXrefDatabase=getDataSourceRowByName(datasource,dataSources),systemCode=dataSourceRowCorrespondingToDataNodeXrefDatabase.systemCode;getXrefAliases(singleSpecies,systemCode,id,function(xRefAliases){var currentDataSourceRow,listItems=[];"undefined"!=typeof xRefAliases&&(listItems=xRefAliases.map(function(xRefAlias){var listItem={};return listItem.title=xRefAlias.dataSourceName,listItem.text=xRefAlias.xRefId,currentDataSourceRow=getDataSourceRowByName(xRefAlias.dataSourceName,dataSources),listItem.priority=currentDataSourceRow.priority,currentDataSourceRow.hasOwnProperty("linkoutPattern")&&""!==currentDataSourceRow.linkoutPattern&&null!==currentDataSourceRow.linkoutPattern&&(listItem.uri=currentDataSourceRow.linkoutPattern.replace("$id",listItem.text)),listItem})),listItems.sort(function(a,b){if(a.priority===b.priority){var x=a.title.toLowerCase(),y=b.title.toLowerCase();return y>x?-1:x>y?1:0}return b.priority-a.priority});var nestedListItems=d3.nest().key(function(d){return d.title}).entries(listItems);if(0==nestedListItems.length){var uri="",ds=getDataSourceRowByName(datasource,dataSources);ds.hasOwnProperty("linkoutPattern")&&""!==ds.linkoutPattern&&null!==ds.linkoutPattern&&(uri=ds.linkoutPattern.replace("$id",id)),nestedListItems=[{key:datasource,values:[{priority:"1",text:id,title:datasource,uri:uri}]}]}var specifiedListItem=nestedListItems.filter(function(element){return element.key==datasource})[0],currentListItemIndex=nestedListItems.indexOf(specifiedListItem);nestedListItems=pathvisiojs.utilities.moveArrayItem(nestedListItems,currentListItemIndex,0);var specifiedXRefId=specifiedListItem.values.filter(function(element){return element.text==id})[0],currentXRefIdIndex=specifiedListItem.values.indexOf(specifiedXRefId);specifiedListItem.values=pathvisiojs.utilities.moveArrayItem(specifiedListItem.values,currentXRefIdIndex,0);var annotationData={header:label,description:desc,listItems:nestedListItems};callback(annotationData)})})}function getDataSourceRowByName(dataSourceName,dataSources){var regexp=/[^\w]/gi,dataSourceRow=dataSources.filter(function(row){return row.dataSourceName===dataSourceName})[0];return dataSourceRow||(dataSourceRow=dataSources.filter(function(row){return row.dataSourceName.replace(regexp,"").toLowerCase()===dataSourceName.replace(regexp,"").toLowerCase()})[0]),dataSourceRow}function getDataSources(callback){d3.tsv(pathvisiojs.config.bridgedbDatasources).response(function(request){return d3.tsv.parseRows(request.responseText,function(d){return{dataSourceName:d[0],systemCode:d[1],websiteUri:d[2],linkoutPattern:d[3],exampleIdentifier:d[4],entityIdentified:d[5],singleSpecies:d[6],priority:d[7],uri:d[8],regex:d[9],officialName:d[10]}})}).get(function(error,rows){callback(rows)})}function getXrefAliases(singleSpecies,systemCode,xRefId,callback){var bridgedbUri=pathvisiojs.config.bridgedbLinkOutsUriStub+encodeURIComponent(singleSpecies)+"/xrefs/"+encodeURIComponent(systemCode)+"/"+encodeURIComponent(xRefId);d3.tsv(bridgedbUri).response(function(request){return d3.tsv.parseRows(request.responseText,function(d){return{xRefId:d[0],dataSourceName:d[1]}})}).get(function(error,rows){callback(rows)})}return{getXrefAnnotationDataByDataNode:getXrefAnnotationDataByDataNode}}(),pathvisiojs.data.biopax=function(){"use strict";function toPvjson(xmlBiopax,callback){try{d3.ns.prefix.bp="http://www.biopax.org/owldoc/Level3/",d3.ns.prefix.rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#",d3.ns.qualify("bp:PublicationXref");var xmlBiopaxPubs=xmlBiopax.selectAll("PublicationXref"),jsonBiopax={};jsonBiopax.PublicationXref=[];var publicationXref;xmlBiopaxPubs.each(function(){publicationXref={},publicationXref.rdfId=d3.select(this).attr("rdf:id").toString(),jsonBiopax.PublicationXref.push(publicationXref)}),callback(jsonBiopax)}catch(e){throw new Error("Error converting biopax to json: "+e.message)}}return{toPvjson:toPvjson}}(),pathvisiojs.data.pvjson=function(){"use strict";function get(renderableSourceDataElement,callback){var uri=renderableSourceDataElement.uri;renderableSourceDataElement.object;var fileType=renderableSourceDataElement.fileType;if(!uri)return new Error("No uri specified.");if(!fileType)return new Error("No fileType specified.");if("gpml"!==fileType)throw new Error("Cannot get jGpml from the specified input.");pathvisiojs.data.gpml.get(renderableSourceDataElement,function(gpml){pathvisiojs.data.gpml.toPvjson(gpml,uri,function(json){console.log("json"),console.log(json),callback(json)})})}return{get:get}}(),pathvisiojs.data.gpml=function(){"use strict";function get(sourceData,callback){var uri=sourceData.uri,object=sourceData.object,fileType=sourceData.fileType;if(!uri&&!object)return new Error("No sourceData specified.");if(!fileType)return new Error("No fileType specified.");if("gpml"!==fileType)throw new Error("Cannot get GPML from the specified input.");9!==pathvisiojs.utilities.isIE()?d3.xml(uri,function(gpmlDoc){var gpml=gpmlDoc.documentElement;callback(gpml)}):async.waterfall([function(callbackInside){$?callbackInside(null):pathvisiojs.utilities.loadScripts(["http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"],function(){callbackInside(null)})},function(callbackInside){d3.xhr(uri,"application/xml",function(error,data){var gpmlString=data.responseText;callbackInside(null,gpmlString)})},function(gpmlString){var gpmlDoc=$.parseXML(gpmlString),gpml=gpmlDoc.documentElement;callback(gpml)}])}function gpmlColorToCssColorNew(gpmlColor){var color;return"transparent"===gpmlColor.toLowerCase()?"transparent":(color=new RGBColor(gpmlColor),color.ok?color.toHex():(console.warn('Could not convert GPML Color value of "'+gpmlColor+'" to a valid CSS color. Using "#c0c0c0" as a fallback.'),"#c0c0c0"))}function gpmlColorToCssColor(gpmlColor,pathvisioDefault){var color;return gpmlColor!==pathvisioDefault?gpmlColor?(color=new RGBColor(gpmlColor),color.ok?color.toHex():pathvisioDefault):pathvisioDefault:pathvisioDefault}function setColorAsJsonNew(jsonElement,currentGpmlColorValue){var jsonColor=gpmlColorToCssColorNew(currentGpmlColorValue);return jsonElement.color=jsonColor,jsonElement.borderColor=jsonColor,jsonElement.hasOwnProperty("text")&&(jsonElement.text.color=jsonColor),jsonElement}function setColorAsJson(jsonElement,currentGpmlColorValue,defaultGpmlColorValue){var jsonColor;return currentGpmlColorValue!==defaultGpmlColorValue&&(jsonColor=gpmlColorToCssColor(currentGpmlColorValue,defaultGpmlColorValue),jsonElement.color=jsonColor,jsonElement.borderColor=jsonColor,jsonElement.hasOwnProperty("text")&&(jsonElement.text.color=jsonColor)),jsonElement}function getLineStyle(gpmlElement){var LineStyle,attributes,graphics=gpmlElement.select("Graphics");return graphics?(LineStyle=graphics.attr("LineStyle"),LineStyle?LineStyle:(attributes=gpmlElement.selectAll("Attribute"),attributes.length>0?(LineStyle=attributes.filter(function(){return"org.pathvisiojs.DoubleLineProperty"===d3.select(this).attr("Key")&&"Double"===d3.select(this).attr("Value")}),LineStyle[0].length>0?"double":null):null)):void 0}function getBorderStyleNew(gpmlLineStyle){var lineStyleToBorderStyleMapping={Solid:"solid",Double:"solid",Broken:"dashed"},borderStyle=lineStyleToBorderStyleMapping[gpmlLineStyle];return borderStyle?borderStyle:(console.warn('LineStyle "'+gpmlLineStyle+'" does not have a corresponding borderStyle. Using "solid"'),"solid")}function getBorderStyle(gpmlLineStyle,pathvisioDefault){var borderStyle,lineStyleToBorderStyleMapping={Solid:"solid",Double:"solid",Broken:"dashed"};return gpmlLineStyle!==pathvisioDefault?gpmlLineStyle?(borderStyle=lineStyleToBorderStyleMapping[gpmlLineStyle],borderStyle?borderStyle:(console.warn('LineStyle "'+gpmlLineStyle+'" does not have a corresponding borderStyle. Using "solid"'),"solid")):"solid":"whatever the default value is"}function setBorderStyleAsJsonNew(jsonElement,currentGpmlLineStyleValue){var borderStyle=getBorderStyleNew(currentGpmlLineStyleValue);return jsonElement.borderStyle=borderStyle,jsonElement}function setBorderStyleAsJson(jsonElement,currentGpmlLineStyleValue,defaultGpmlLineStyleValue){var borderStyle;return currentGpmlLineStyleValue!==defaultGpmlLineStyleValue&&(borderStyle=getBorderStyle(currentGpmlLineStyleValue,defaultGpmlLineStyleValue),jsonElement.borderStyle=borderStyle),jsonElement}function toPvjson(gpml,pathwayIri,callbackOutside){var gpmlPathway=d3.select(gpml);console.log("GPML"),console.log(gpml);var pathway={};if(pathway.xmlns=gpmlPathway.attr("xmlns"),pathway.nodes=[],pathway.edges=[],pathway.elements=[],-1===pathvisiojs.data.gpml.namespaces.indexOf(pathway.xmlns))throw alert("Pathvisiojs does not support the data format provided. Please convert to GPML and retry."),new Error("Pathvisiojs does not support the data format provided. Please convert to GPML and retry.");0!==pathvisiojs.data.gpml.namespaces.indexOf(pathway.xmlns)?callbackOutside("fail"):async.parallel({"@context":function(callback){pathway["@context"]={"@vocab":"http://vocabularies.wikipathways.org/gpml#","@base":pathwayIri,gpml:"http://vocabularies.wikipathways.org/gpml#",id:"@id",xsd:"http://www.w3.org/2001/XMLSchema#",wp:"http://vocabularies.wikipathways.org/wp#",biopax:"http://www.biopax.org/release/biopax-level3.owl#",schema:"http://schema.org/",hMDB:"http://www.hmdb.ca/metabolites/HMDB",entrezGene:"http://www.ncbi.nlm.nih.gov/gene/",ChEBI:"http://www.ebi.ac.uk/chebi/searchId.do?chebiId=",media:"http://www.w3.org/TR/mediaont-10/",ex:"http://www.example.com/",pathwayIri:pathwayIri,PublicationXref:"biopax:PublicationXref",gpmlFolder:"file://Users/andersriutta/Sites/pathvisiojs/test/gpml/",name:"http://xmlns.com/foaf/0.1/name",dcterms:"http://puri.org/dc/terms/",css2:"http://www.w3.org/TR/CSS2/",css3Ui:"http://www.w3.org/TR/css3-ui/#",cssTransform:"http://www.w3.org/TR/css-transforms-1/#",svg:"http://www.w3.org/TR/SVG11/",boxSizing:{"@id":"css3Ui:box-sizing","@value":"border-box"},rotate:"cssTransform:funcdef-rotate",position:"css2:visuren.html#propdef-position",color:"css2:colors.html#propdef-color",backgroundColor:"css2:colors.html#propdef-background-color",backgroundImage:"css2:colors.html#propdef-background-image",borderColor:"css2:box.html#propdef-border-color",borderWidth:"css2:box.html#propdef-border-width",borderStyle:"css2:box.html#propdef-border-style",x:"css2:visuren.html#propdef-left",y:"css2:visuren.html#propdef-top",width:"css2:visudet.html#propdef-width",height:"css2:visudet.html#propdef-height",padding:"css2:box.html#propdef-padding",fontFamily:"css2:fonts.html#font-family-prop",fontStyle:"css2:fonts.html#propdef-font-style",textAlign:"css2:text.html#propdef-text-align",verticalAlign:"css2:visudet.html#propdef-vertical-align",fontSize:"css2:fonts.html#propdef-font-size",fontWeight:"css2:fonts.html#propdef-font-weight",zIndex:{"@id":"css2:z-index","@type":"xsd:integer"},DatasourceReference:"wp:DatasourceReference",DataSource:"gpml:Data-Source",LastModified:"gpml:Last-Modified",Pathway:"biopax:Pathway",shapeLibrary:"http://shapelibrary.example.org/",shapeName:"shapeLibrary:shapeName",image:"schema:image",dataNodeType:"gpml:Type",author:"schema:author",organism:"biopax:organism",stroke:"svg:painting.html#StrokeProperty",strokeWidth:"svg:painting.html#StrokeWidthProperty",line:{"@id":"svg:text.html#TSpanElement","@container":"@set"},Group:{"@id":"gpml:Group","@container":"@list"},pathwayElements:{"@id":"ex:pathwayElements/","@container":"@list"},contains:{"@id":"ex:contains","@type":"@id"},isContainedBy:{"@reverse":"ex:contains","@type":"@id"},edge:{"@type":"@id","@container":"@list",InteractionGraph:{"@type":"@id","@container":"@list"}},InteractionGraph:{"@type":"@id","@container":"@list"},interactsWith:{"@id":"ex:interactsWith","@type":"@id"},Interaction:{"@id":"biopax:Interaction","@type":"@id"},Point:{"@id":"gpml:Point","@container":"@list"}},callback(null,pathway["@context"])},PublicationXref:function(callback){pathvisiojs.data.gpml.biopaxRef.getAllAsPvjson(gpmlPathway,function(publicationXrefs){publicationXrefs?(pathway.PublicationXref=publicationXrefs,callback(null,"BiopaxRefs are all converted.")):callback(null,"No biopaxRefs to convert.")})},DataSource:function(callback){var jsonDataSource=gpmlPathway.attr("Data-Source");jsonDataSource?(pathway.DataSource=jsonDataSource,callback(null,"DataSource converted.")):callback(null,"No DataSource to convert.")},Version:function(callback){var jsonVersion=gpmlPathway.attr("Version");jsonVersion?(pathway.Version=jsonVersion,callback(null,"Version converted.")):callback(null,"No Version to convert.")},Author:function(callback){var jsonAuthor=gpmlPathway.attr("Author");jsonAuthor?(pathway.Author=jsonAuthor,callback(null,"Author converted.")):callback(null,"No Author to convert.")},Maintainer:function(callback){var jsonMaintainer=gpmlPathway.attr("Maintainer");jsonMaintainer?(pathway.Maintainer=jsonMaintainer,callback(null,"Maintainer converted.")):callback(null,"No Maintainer to convert.")},Email:function(callback){var jsonEmail=gpmlPathway.attr("Email");jsonEmail?(pathway.Email=jsonEmail,callback(null,"Email converted.")):callback(null,"No Email to convert.")},LastModified:function(callback){var jsonLastModified=gpmlPathway.attr("Last-Modified");jsonLastModified?(pathway.LastModified=jsonLastModified,callback(null,"LastModified converted.")):callback(null,"No LastModified to convert.")},License:function(callback){var jsonLicense=gpmlPathway.attr("License");jsonLicense?(pathway.License=jsonLicense,callback(null,"License converted.")):callback(null,"No License to convert.")},Name:function(callback){var jsonName=gpmlPathway.attr("Name");jsonName?(pathway.Name=jsonName,callback(null,"Name converted.")):callback(null,"No Name to convert.")},Organism:function(callback){var jsonOrganism=gpmlPathway.attr("Organism");jsonOrganism?(pathway.Organism=jsonOrganism,callback(null,"Organism converted.")):callback(null,"No Organism to convert.")},image:function(callback){pathway.image={"@context":{"@vocab":"http://schema.org/"},width:parseFloat(gpmlPathway.select("Graphics").attr("BoardWidth")),height:parseFloat(gpmlPathway.select("Graphics").attr("BoardHeight"))},callback(null,pathway.image)},Biopax:function(callback){var xmlBiopax=gpmlPathway.selectAll("Biopax");xmlBiopax[0].length>0?(pathvisiojs.data.biopax.toPvjson(xmlBiopax,function(jsonBiopax){pathway.Biopax=jsonBiopax}),callback(null,"Biopax all converted.")):callback(null,"No Biopax to convert.")},DataNode:function(callback){var gpmlDataNode,dataNodes=gpmlPathway.selectAll("DataNode");dataNodes[0].length>0?(pathway.DataNode=[],dataNodes.each(function(){gpmlDataNode=d3.select(this),pathvisiojs.data.gpml.element.node.entityNode.dataNode.toPvjson(gpmlDataNode,pathwayIri,function(jsonDataNode){pathway.DataNode.push(jsonDataNode),pathway.nodes=pathway.nodes.concat(jsonDataNode),pathway.elements=pathway.elements.concat(jsonDataNode)})}),callback(null,"DataNodes are all converted.")):callback(null,"No dataNodes to convert.")},Label:function(callback){var gpmlLabel,labels=gpmlPathway.selectAll("Label");labels[0].length>0?(pathway.Label=[],gpmlPathway.selectAll("Label").each(function(){gpmlLabel=d3.select(this),pathvisiojs.data.gpml.element.node.entityNode.label.toPvjson(gpmlLabel,pathwayIri,function(jsonLabel){pathway.Label.push(jsonLabel),pathway.nodes=pathway.nodes.concat(jsonLabel),pathway.elements=pathway.elements.concat(jsonLabel)})}),callback(null,"Labels are all converted.")):callback(null,"No labels to convert.")},Shape:function(callback){var gpmlShape,shapes=gpmlPathway.selectAll("Shape");shapes[0].length>0?(pathway.Shape=[],gpmlPathway.selectAll("Shape").each(function(){gpmlShape=d3.select(this),pathvisiojs.data.gpml.element.node.entityNode.shape.toPvjson(gpmlShape,pathwayIri,function(jsonShape){pathway.Shape.push(jsonShape),pathway.nodes=pathway.nodes.concat(jsonShape),pathway.elements=pathway.elements.concat(jsonShape)})}),callback(null,"Shapes are all converted.")):callback(null,"No shapes to convert.")},Group:function(callback){var gpmlGroup,groups=gpmlPathway.selectAll("Group");groups[0].length>0?(pathway.Group=[],gpmlPathway.selectAll("Group").each(function(){gpmlGroup=d3.select(this),pathvisiojs.data.gpml.element.node.groupNode.toPvjson(gpml,gpmlGroup,pathwayIri,function(jsonGroup){pathway.Group.push(jsonGroup),pathway.nodes=pathway.nodes.concat(jsonGroup)})}),callback(null,"Groups are all converted.")):callback(null,"No groups to convert.")},GraphicalLine:function(callback){var gpmlGraphicalLine,graphicalLines=gpmlPathway.selectAll("GraphicalLine");graphicalLines[0].length>0?(pathway.GraphicalLine=[],gpmlPathway.selectAll("GraphicalLine").each(function(){gpmlGraphicalLine=d3.select(this),pathvisiojs.data.gpml.edge.graphicalLine.toPvjson(gpml,gpmlGraphicalLine,pathwayIri,function(jsonGraphicalLine){pathway.GraphicalLine.push(jsonGraphicalLine),pathway.edges=pathway.edges.concat(jsonGraphicalLine),pathway.elements=pathway.elements.concat(jsonGraphicalLine)})}),callback(null,"GraphicalLines are all converted.")):callback(null,"No graphicalLines to convert.")},Interaction:function(callback){var gpmlInteraction,interactions=gpmlPathway.selectAll("Interaction");interactions[0].length>0?(pathway.Interaction=[],gpmlPathway.selectAll("Interaction").each(function(){gpmlInteraction=d3.select(this),pathvisiojs.data.gpml.edge.interaction.toPvjson(gpml,gpmlInteraction,pathwayIri,function(jsonInteraction){pathway.Interaction.push(jsonInteraction),pathway.edges=pathway.edges.concat(jsonInteraction),pathway.elements=pathway.elements.concat(jsonInteraction)})}),callback(null,"Interactions are all converted.")):callback(null,"No interactions to convert.")}},function(){var groupsFrame,jsonGroups=[];pathway.Group?(groupsFrame={"@context":pathway["@context"],"@type":"GroupNode",contains:{}},jsonld.frame(pathway,groupsFrame,function(err,framedGroups){async.waterfall([function(callbackInside){framedGroups["@graph"].forEach(function(jsonGroup){jsonGroup.contains&&pathvisiojs.data.gpml.element.node.groupNode.getGroupDimensions(jsonGroup,function(dimensions){jsonGroup.x=dimensions.x,jsonGroup.y=dimensions.y,jsonGroup.width=dimensions.width,jsonGroup.height=dimensions.height,jsonGroup.zIndex=dimensions.zIndex,pathvisiojs.data.gpml.element.node.getPorts(jsonGroup,function(ports){jsonGroup.Port=ports,-1===jsonGroups.indexOf(jsonGroup)&&jsonGroups.push(jsonGroup)})})}),callbackInside(null,jsonGroups)},function(jsonGroups,callbackInside){pathway.Group=jsonGroups,pathway.elements=pathway.elements.concat(pathway.Group);var relativeZIndexByRenderableType={GroupNode:0,Interaction:1,GraphicalLine:2,Anchor:3,EntityNode:4};pathway.elements.sort(function(a,b){var aPriority,bPriority;return a.zIndex!==b.zIndex?(aPriority=a.zIndex+relativeZIndexByRenderableType[a.renderableType],bPriority=b.zIndex+relativeZIndexByRenderableType[b.renderableType]):(aPriority=a.zIndex,bPriority=b.zIndex),aPriority-bPriority}),callbackInside(null,pathway)},function(pathway,callbackInside){pathway.pathwayNestedByGrouping=d3.nest().key(function(d){return d.isContainedBy}).entries(pathway.elements);var firstOrderElement=pathway.pathwayNestedByGrouping.filter(function(group){return"undefined"===group.key})[0];pathway.pathwayNestedByGrouping=pathvisiojs.utilities.moveArrayItem(pathway.pathwayNestedByGrouping,pathway.pathwayNestedByGrouping.indexOf(firstOrderElement),0),callbackInside(null,pathway)},function(pathway){self.myPathway=pathway,callbackOutside(pathway)}])})):(pathway.elements.sort(function(a,b){return a.zIndex-b.zIndex}),pathway.pathwayNestedByGrouping=d3.nest().key(function(d){return d.isContainedBy}).entries(pathway.elements),callbackOutside(pathway))})}return{get:get,toPvjson:toPvjson,getLineStyle:getLineStyle,getBorderStyleNew:getBorderStyleNew,setBorderStyleAsJsonNew:setBorderStyleAsJsonNew,getBorderStyle:getBorderStyle,setBorderStyleAsJson:setBorderStyleAsJson,gpmlColorToCssColor:gpmlColorToCssColor,gpmlColorToCssColorNew:gpmlColorToCssColorNew,setColorAsJsonNew:setColorAsJsonNew,setColorAsJson:setColorAsJson}}(),pathvisiojs.data.gpml.node=pathvisiojs.data.gpml.node||{},pathvisiojs.data.gpml.element={};var pathvisioDefaultStyleValues={FontSize:{Type:"FontSize",Value:10}};pathvisiojs.data.gpml.element.gpmlColorToCssColor=function(gpmlColor,pathvisioDefault){var color;return gpmlColor!==pathvisioDefault?gpmlColor?(color=new RGBColor(gpmlColor),color.ok?color.toHex():"black"):"black":null},pathvisiojs.data.gpml.element.setColorAsJson=function(jsonElement,currentGpmlColorValue,defaultGpmlColorValue){var jsonColor;return currentGpmlColorValue!==defaultGpmlColorValue&&(jsonColor=gpmlColorToCssColor(currentGpmlColorValue,defaultGpmlColorValue),jsonElement.color=jsonColor,jsonElement.borderColor=jsonColor,jsonElement.hasOwnProperty("text")&&(jsonElement.text.color=jsonColor)),jsonElement},pathvisiojs.data.gpml.element.setColorAsJson=function(jsonElement,currentGpmlColorValue,defaultGpmlColorValue){var jsonColor;return currentGpmlColorValue!==defaultGpmlColorValue&&(jsonColor=gpmlColorToCssColor(currentGpmlColorValue,defaultGpmlColorValue),jsonElement.color=jsonColor,jsonElement.borderColor=jsonColor,jsonElement.hasOwnProperty("text")&&(jsonElement.text.color=jsonColor)),jsonElement},pathvisiojs.data.gpml.element.getLineStyle=function(gpmlElement){var LineStyle,attributes,graphics=gpmlElement.select("Graphics");return graphics?(LineStyle=graphics.attr("LineStyle"),LineStyle?LineStyle:(attributes=gpmlElement.selectAll("Attribute"),attributes.length>0?(LineStyle=attributes.filter(function(){return"org.pathvisiojs.DoubleLineProperty"===d3.select(this).attr("Key")&&"Double"===d3.select(this).attr("Value")}),LineStyle[0].length>0?"double":null):null)):void 0},pathvisiojs.data.gpml.element.getBorderStyle=function(gpmlLineStyle,pathvisioDefault){var borderStyle,lineStyleToBorderStyleMapping={Solid:"solid",Double:"solid",Broken:"dashed"};return gpmlLineStyle!==pathvisioDefault?gpmlLineStyle?(borderStyle=lineStyleToBorderStyleMapping[gpmlLineStyle],borderStyle?borderStyle:(console.warn('LineStyle "'+gpmlLineStyle+'" does not have a corresponding borderStyle. Using "solid"'),"solid")):"solid":"whatever the default value is"},pathvisiojs.data.gpml.element.setBorderStyleAsJson=function(jsonElement,currentGpmlLineStyleValue,defaultGpmlLineStyleValue){var borderStyle;return currentGpmlLineStyleValue!==defaultGpmlLineStyleValue&&(borderStyle=getBorderStyle(currentGpmlLineStyleValue,defaultGpmlLineStyleValue),jsonElement.borderStyle=borderStyle),jsonElement},pathvisiojs.data.gpml.element.color={},pathvisiojs.data.gpml.element.color.swing="000000",pathvisiojs.data.gpml.element.color.gpml=null,pathvisiojs.data.gpml.element.fillColor={},pathvisiojs.data.gpml.element.fillColor.swing="ffffff",pathvisiojs.data.gpml.element.fillColor.gpml=null,pathvisiojs.data.gpml.element.lineStyle={},pathvisiojs.data.gpml.element.lineStyle.swing="Solid",pathvisiojs.data.gpml.element.lineStyle.gpml=null,pathvisiojs.data.gpml.element.fontSize={},pathvisiojs.data.gpml.element.fontSize.swing=10,pathvisiojs.data.gpml.element.fontSize.gpml=10,pathvisiojs.data.gpml.element.fontWeight={},pathvisiojs.data.gpml.element.fontWeight.swing=null,pathvisiojs.data.gpml.element.fontWeight.gpml=null,pathvisiojs.data.gpml.element.fontName={},pathvisiojs.data.gpml.element.fontName.swing="Arial",pathvisiojs.data.gpml.element.fontName.gpml=null,pathvisiojs.data.gpml.element.toPvjson=function(gpmlElement,jsonElement,elementCallback){jsonElement["@type"]=jsonElement["@type"]||[],jsonElement["@type"].push("element"),pathvisiojs.data.gpml.biopaxRef.getAllAsPvjson(gpmlElement,function(publicationXrefs){publicationXrefs&&(jsonElement.PublicationXref=publicationXrefs),elementCallback(jsonElement)})},pathvisiojs.data.gpml.text=function(){"use strict";function toPvjson(gpmlNode,inputDefaultValues,textCallbackOutside){var jsonText,textAlign,verticalAlign,fontStyle,fontWeight,fontSize,fontFamily,thisPathvisioDefaultStyleValues=pathvisiojs.utilities.collect(pathvisioDefaultStyleValues.text,inputDefaultValues),text=gpmlNode.attr("TextLabel");if(text){jsonText={},jsonText.id="id"+uuid.v4(),jsonText.line=text.split(/\r\n|\r|\n|&#xA;/g);var textAlign,fontStyle,fontWeight,fontSize,fontFamily,graphics=gpmlNode.select("Graphics");graphics[0][0]&&(textAlign=gpmlNode.select("Graphics").attr("Align")||"center",jsonText.textAlign=textAlign.toLowerCase(),verticalAlign=gpmlNode.select("Graphics").attr("Valign")||"middle",jsonText.verticalAlign=verticalAlign.toLowerCase(),fontStyle=gpmlNode.select("Graphics").attr("FontStyle"),fontStyle!==thisPathvisioDefaultStyleValues.FontStyle&&fontStyle&&(jsonText.fontStyle=fontStyle.toLowerCase()),fontWeight=gpmlNode.select("Graphics").attr("FontWeight"),fontWeight!==thisPathvisioDefaultStyleValues.FontWeight&&fontWeight&&(jsonText.fontWeight=fontWeight.toLowerCase()),fontSize=gpmlNode.select("Graphics").attr("FontSize")||10,parseFloat(fontSize)!==thisPathvisioDefaultStyleValues.FontSize&&fontSize&&(jsonText.fontSize=parseFloat(fontSize)),fontFamily=gpmlNode.select("Graphics").attr("FontName"),fontFamily!==thisPathvisioDefaultStyleValues.FontName&&fontFamily&&(jsonText.fontFamily=fontFamily)),textCallbackOutside(jsonText)
}else textCallbackOutside(null)}var pathvisioDefaultStyleValues={text:{Align:null,Valign:"Middle",FontStyle:null,FontName:null}};return{toPvjson:toPvjson}}(),pathvisiojs.data.gpml.namespaces=["http://pathvisio.org/GPML/2013a","http://genmapp.org/GPML/2010a","http://genmapp.org/GPML/2008a","http://genmapp.org/GPML/2007"],pathvisiojs.data.gpml.biopaxRef=function(){"use strict";function getAllAsPvjson(gpmlElement,callback){var publicationXrefs,jsonPublicationXref,tagName=gpmlElement[0][0].tagName,biopaxRefs=gpmlElement.selectAll(tagName+" > BiopaxRef");biopaxRefs[0].length>0?(publicationXrefs=[],biopaxRefs.each(function(){jsonPublicationXref=d3.select(this)[0][0].textContent,publicationXrefs.push(jsonPublicationXref)}),callback(publicationXrefs)):callback(null)}return{getAllAsPvjson:getAllAsPvjson}}(),pathvisiojs.data.gpml.element.node=function(){"use strict";var defaults={};defaults.backgroundImage={},defaults.shapeType={},defaults.shapeType.swing="Rectangle",defaults.shapeType.gpml="Rectangle",defaults.valign=defaults.verticalAlign={},defaults.valign.swing="Middle",defaults.valign.gpml="Middle",defaults.align=defaults.textAlign={},defaults.align.swing="Center",defaults.align.gpml=null,defaults.padding={},defaults.padding.swing="0.5em",defaults.padding.gpml=null,defaults.lineThickness=defaults.borderWidth={},defaults.lineThickness.swing=1,defaults.lineThickness.gpml=null,defaults.lineStyle=defaults.borderStyle;var setJsonBackgroundColor=function(jsonNode,currentGpmlFillColorValue){var jsonBackgroundColor=pathvisiojs.data.gpml.gpmlColorToCssColorNew(currentGpmlFillColorValue);return jsonNode.backgroundColor=jsonBackgroundColor,jsonNode},getPorts=function(jsonNode,callback){var perpendicularUnitVector,rotate,getPerpendicularLine=function(sx,sy,rotate){var dx,dy,rad=rotate*Math.PI/180,sideAngleRotation=2*Math.PI-rad,sideAngleBeforeRotate=Math.atan2(sy,sx),dx=Math.cos(sideAngleBeforeRotate+sideAngleRotation-Math.PI/2),dy=Math.sin(sideAngleBeforeRotate+sideAngleRotation-Math.PI/2);return{dx:dx,dy:dy}},ports=[],relXYCombinations=[{RelX:-.5,RelY:-1},{RelX:0,RelY:-1},{RelX:.5,RelY:-1},{RelX:1,RelY:-.5},{RelX:1,RelY:0},{RelX:1,RelY:.5},{RelX:-.5,RelY:1},{RelX:0,RelY:1},{RelX:.5,RelY:1},{RelX:-1,RelY:-.5},{RelX:-1,RelY:0},{RelX:-1,RelY:.5}],side={};relXYCombinations.forEach(function(relXYCombination){1===Math.abs(relXYCombination.RelX)?(side.sx=relXYCombination.RelX,side.sy=0):(side.sx=0,side.sy=relXYCombination.RelY),rotate=jsonNode.rotate||0,perpendicularUnitVector=getPerpendicularLine(side.sx,side.sy,rotate),ports.push({x:jsonNode.x+jsonNode.width*(relXYCombination.RelX+1)/2,y:jsonNode.y+jsonNode.height*(relXYCombination.RelY+1)/2,positionRelative:{"@context":{position:{"@value":"relative"}},x:100*(relXYCombination.RelX+1)/2+"%",y:100*(relXYCombination.RelY+1)/2+"%"},dx:perpendicularUnitVector.dx,dy:perpendicularUnitVector.dy,"@type":"Port"})}),callback(ports)},toPvjson=function(gpmlNode,jsonNode,callback){jsonNode["@type"]=jsonNode["@type"]||[],jsonNode["@type"].push("node"),pathvisiojs.data.gpml.element.toPvjson(gpmlNode,jsonNode,function(jsonNode){callback(jsonNode)})},getPortCoordinates=function(boxDimensions,relX,relY){var port={};return port.x=boxDimensions.x+relX*boxDimensions.width,port.y=boxDimensions.y+relY*boxDimensions.height,port};return{setJsonBackgroundColor:setJsonBackgroundColor,getPorts:getPorts,getPortCoordinates:getPortCoordinates,toPvjson:toPvjson}}(),pathvisiojs.data.gpml.element.node.groupNode=function(){"use strict";function getGroupDimensions(group,callback){var dimensions={};dimensions.topLeftCorner={},dimensions.topLeftCorner.x=99999,dimensions.topLeftCorner.y=99999,dimensions.bottomRightCorner={},dimensions.bottomRightCorner.x=0,dimensions.bottomRightCorner.y=0;var groupContents=group.contains;groupContents=pathvisiojs.utilities.convertToArray(groupContents),dimensions.zIndex=groupContents[0].zIndex,async.each(groupContents,function(groupContent,callbackInside){"EntityNode"===groupContent.renderableType?(dimensions.topLeftCorner.x=Math.min(dimensions.topLeftCorner.x,groupContent.x),dimensions.topLeftCorner.y=Math.min(dimensions.topLeftCorner.y,groupContent.y),dimensions.bottomRightCorner.x=Math.max(dimensions.bottomRightCorner.x,groupContent.x+groupContent.width),dimensions.bottomRightCorner.y=Math.max(dimensions.bottomRightCorner.y,groupContent.y+groupContent.height)):(dimensions.topLeftCorner.x=Math.min(dimensions.topLeftCorner.x,groupContent.Point[0].x,groupContent.Point[groupContent.Point.length-1].x),dimensions.topLeftCorner.y=Math.min(dimensions.topLeftCorner.y,groupContent.Point[0].y,groupContent.Point[groupContent.Point.length-1].y),dimensions.bottomRightCorner.x=Math.max(dimensions.bottomRightCorner.x,groupContent.Point[0].x,groupContent.Point[groupContent.Point.length-1].x),dimensions.bottomRightCorner.y=Math.max(dimensions.bottomRightCorner.y,groupContent.Point[0].y,groupContent.Point[groupContent.Point.length-1].y)),dimensions.x=dimensions.topLeftCorner.x-group.padding-group.borderWidth,dimensions.y=dimensions.topLeftCorner.y-group.padding-group.borderWidth,dimensions.width=dimensions.bottomRightCorner.x-dimensions.topLeftCorner.x+2*(group.padding+group.borderWidth),dimensions.height=dimensions.bottomRightCorner.y-dimensions.topLeftCorner.y+2*(group.padding+group.borderWidth),dimensions.zIndex=Math.min(dimensions.zIndex,groupContent.zIndex),callbackInside(null)},function(){callback(dimensions)})}function toPvjson(pathway,gpmlGroup,pathwayIri,callbackOutside){var groupId,shapeType,groupType,jsonGroup={},graphId=gpmlGroup.attr("GraphId")||"id"+uuid.v4();jsonGroup.GraphId=graphId,groupId=gpmlGroup.attr("GroupId")||"id"+uuid.v4(),jsonGroup.id=groupId,jsonGroup.GroupId=groupId,groupType=gpmlGroup.attr("Style")||"None";var shapeType=groupTypeToShapeTypeMappings[groupType];jsonGroup.ShapeType=shapeType||"rectangle",jsonGroup.renderableType="GroupNode",jsonGroup.nodeType="GroupNode",jsonGroup.groupType=groupType,jsonGroup["@type"]=[],jsonGroup["@type"].push(shapeType),jsonGroup["@type"].push("GroupNode"),jsonGroup["@type"].push(groupType);var groupTypeToPaddingValueMappings={Complex:11,Group:8,None:8,Pathway:8};jsonGroup.padding=groupTypeToPaddingValueMappings[groupType],jsonGroup.borderWidth=1,pathvisiojs.data.gpml.text.toPvjson(gpmlGroup,pathvisioDefaultStyleValues,function(text){text&&(jsonGroup.text=text,jsonGroup.text.fontSize=32,jsonGroup.text.textAlign="center",jsonGroup.text.verticalAlign="middle"),pathvisiojs.data.gpml.element.node.toPvjson(gpmlGroup,jsonGroup,function(jsonGroup){callbackOutside(jsonGroup)})})}var groupTypeToShapeTypeMappings={Complex:"complex",Group:"rectangle",None:"rectangle",Pathway:"rectangle"},pathvisioDefaultStyleValues={FontSize:null,FontWeight:null};return{toPvjson:toPvjson,getGroupDimensions:getGroupDimensions}}(),pathvisiojs.data.gpml.element.node.entityNode=Object.create(pathvisiojs.data.gpml.element.node),pathvisiojs.data.gpml.element.node.entityNode.setJsonRotationValue=function(jsonNode,currentGpmlRotationValue,defaultGpmlRotationValue){return currentGpmlRotationValue!==defaultGpmlRotationValue&&(jsonNode.rotate=180*currentGpmlRotationValue/Math.PI),jsonNode},pathvisiojs.data.gpml.element.node.entityNode.toPvjson=function(gpmlEntityNode,jsonEntityNode,pathvisioDefaultStyleValues,pathwayIri,EntityNodeCallback){"use strict";var graphId=gpmlEntityNode.attr("GraphId")||"id"+uuid.v4();jsonEntityNode.id=""+graphId,jsonEntityNode.GraphId=graphId;var isContainedBy=gpmlEntityNode.attr("GroupRef");isContainedBy&&(jsonEntityNode.isContainedBy=isContainedBy);var shapeType=gpmlEntityNode.select("Graphics").attr("ShapeType")||"rectangle";shapeType=strcase.paramCase(shapeType),jsonEntityNode.ShapeType=shapeType,jsonEntityNode.zIndex=parseFloat(gpmlEntityNode.select("Graphics").attr("ZOrder")),jsonEntityNode.renderableType="EntityNode",jsonEntityNode["@type"]=jsonEntityNode["@type"]||[],jsonEntityNode["@type"].push("EntityNode"),jsonEntityNode["@type"].push(shapeType);var groupedStatus=isContainedBy||"notGrouped";jsonEntityNode["@type"].push(groupedStatus);var borderWidth=gpmlEntityNode.select("Graphics").attr("LineThickness");borderWidth!==pathvisioDefaultStyleValues.LineThickness&&(jsonEntityNode.borderWidth=parseFloat(borderWidth)),borderWidth=jsonEntityNode.borderWidth||1;var gpmlWidth=parseFloat(gpmlEntityNode.select("Graphics").attr("Width"));jsonEntityNode.width=gpmlWidth+borderWidth;var gpmlHeight=parseFloat(gpmlEntityNode.select("Graphics").attr("Height"));jsonEntityNode.height=gpmlHeight+borderWidth;var centerX=parseFloat(gpmlEntityNode.select("Graphics").attr("CenterX"));jsonEntityNode.x=centerX-gpmlWidth/2;var centerY=parseFloat(gpmlEntityNode.select("Graphics").attr("CenterY"));jsonEntityNode.y=centerY-gpmlHeight/2,jsonEntityNode.padding="0.5em";var doubleProperty,attributes=gpmlEntityNode.selectAll("Attribute");attributes.length>0&&(doubleProperty=attributes.filter(function(){return"org.pathvisio.DoubleLineProperty"===d3.select(this).attr("Key")&&"Double"===d3.select(this).attr("Value")}),doubleProperty[0].length>0&&(jsonEntityNode.ShapeType=shapeType+"-double")),pathvisiojs.data.gpml.element.node.getPorts(jsonEntityNode,function(ports){jsonEntityNode.Port=ports,pathvisiojs.data.gpml.element.node.toPvjson(gpmlEntityNode,jsonEntityNode,function(jsonEntityNode){EntityNodeCallback(jsonEntityNode,ports)})})},pathvisiojs.data.gpml.element.node.entityNode.dataNode=function(){var defaults={Color:"000000",FillColor:"ffffff",FontSize:10,FontWeight:"Normal",LineStyle:"Solid"},toPvjson=function(gpmlDataNode,pathwayIri,callbackInside){"use strict";var jsonDataNode={},dataNodeType=gpmlDataNode.attr("Type");dataNodeType||(dataNodeType="Unknown"),jsonDataNode.nodeType="DataNode",jsonDataNode.dataNodeType=dataNodeType,jsonDataNode["@type"]=jsonDataNode["@type"]||[],jsonDataNode["@type"].push("DataNode"),jsonDataNode["@type"].push(dataNodeType),pathvisiojs.data.gpml.element.node.entityNode.toPvjson(gpmlDataNode,jsonDataNode,defaults,pathwayIri,function(jsonDataNode){var database,ID,datasourceReference=gpmlDataNode.select("Xref");datasourceReference&&(database=datasourceReference.attr("Database"),ID=datasourceReference.attr("ID"),database&&ID&&(jsonDataNode.DatasourceReference={},jsonDataNode.DatasourceReference.Database=database,jsonDataNode.DatasourceReference.ID=ID)),pathvisiojs.data.gpml.text.toPvjson(gpmlDataNode,defaults,function(text){text&&(jsonDataNode.text=text);var gpmlLineStyle=gpmlDataNode.select("Graphics").attr("LineStyle")||defaults.LineStyle;jsonDataNode=pathvisiojs.data.gpml.setBorderStyleAsJsonNew(jsonDataNode,gpmlLineStyle);var gpmlColor=gpmlDataNode.select("Graphics").attr("Color")||defaults.Color;jsonDataNode=pathvisiojs.data.gpml.setColorAsJsonNew(jsonDataNode,gpmlColor);var gpmlFillColor=gpmlDataNode.select("Graphics").attr("FillColor")||defaults.FillColor;jsonDataNode=pathvisiojs.data.gpml.element.node.setJsonBackgroundColor(jsonDataNode,gpmlFillColor),callbackInside(jsonDataNode)})})};return{toPvjson:toPvjson}}(),pathvisiojs.data.gpml.element.node.entityNode.label=Object.create(pathvisiojs.data.gpml.element.node.entityNode),pathvisiojs.data.gpml.element.node.entityNode.label.Rotation=null,pathvisiojs.data.gpml.element.node.entityNode.label.Color=null,pathvisiojs.data.gpml.element.node.entityNode.label.FillColor=null,pathvisiojs.data.gpml.element.node.entityNode.label.FontSize=10,pathvisiojs.data.gpml.element.node.entityNode.label.FontWeight=null,pathvisiojs.data.gpml.element.node.entityNode.label.toPvjson=function(gpmlLabel,pathwayIri,callback){"use strict";var defaults={Color:"000000",FillColor:"Transparent",FontSize:10,FontWeight:"Normal",LineStyle:"Solid"},jsonLabel={};jsonLabel.nodeType="Label",pathvisiojs.data.gpml.element.node.entityNode.toPvjson(gpmlLabel,jsonLabel,pathvisiojs.data.gpml.element.node.entityNode.label,pathwayIri,function(jsonLabel){pathvisiojs.data.gpml.text.toPvjson(gpmlLabel,pathvisiojs.data.gpml.element.node.entityNode.label,function(text){text&&(jsonLabel.text=text),jsonLabel=pathvisiojs.data.gpml.setColorAsJson(jsonLabel,gpmlLabel.select("Graphics").attr("Color"),pathvisiojs.data.gpml.element.node.entityNode.label.Color);var gpmlBackgroundColor=gpmlLabel.select("Graphics").attr("FillColor")||defaults.FillColor,jsonBackgroundColor=pathvisiojs.data.gpml.gpmlColorToCssColor(gpmlBackgroundColor,pathvisiojs.data.gpml.element.node.entityNode.label.FillColor);jsonBackgroundColor&&(jsonLabel.backgroundColor=jsonBackgroundColor),callback(jsonLabel)})})},pathvisiojs.data.gpml.element.node.entityNode.shape=function(){"use strict";function toPvjson(gpmlShape,pathwayIri,callback){self.myGpmlShape=gpmlShape;var gpmlWidth,gpmlCenterX;"Triangle"===gpmlShape.select("Graphics").attr("ShapeType")&&(gpmlWidth=parseFloat(gpmlShape.select("Graphics").attr("Width")),gpmlCenterX=parseFloat(gpmlShape.select("Graphics").attr("CenterX")),gpmlShape.select("Graphics").attr("CenterX",gpmlCenterX+.27*gpmlWidth),gpmlShape.select("Graphics").attr("Width",.98*gpmlWidth));var jsonShape={};jsonShape.nodeType="Shape";var CellularComponent,attributes=gpmlShape.selectAll("Attribute");attributes.length>0&&(CellularComponent=attributes.filter(function(){return"org.pathvisio.CellularComponentProperty"===d3.select(this).attr("Key")&&"None"!==d3.select(this).attr("Value")}),CellularComponent[0].length>0&&(jsonShape.CellularComponent=CellularComponent.attr("Value")));var thisPathvisioDefaultStyleValues;thisPathvisioDefaultStyleValues=jsonShape.CellularComponent?pathvisiojs.utilities.collect(pathvisioDefaultStyleValues.Shape,pathvisioDefaultStyleValues.Shape[strcase.classCase(jsonShape.CellularComponent)]):pathvisioDefaultStyleValues.Shape,pathvisiojs.data.gpml.element.node.entityNode.toPvjson(gpmlShape,jsonShape,thisPathvisioDefaultStyleValues,pathwayIri,function(jsonShape){pathvisiojs.data.gpml.text.toPvjson(gpmlShape,thisPathvisioDefaultStyleValues,function(text){text&&(jsonShape.text=text),jsonShape=pathvisiojs.data.gpml.setColorAsJson(jsonShape,gpmlShape.select("Graphics").attr("Color"),thisPathvisioDefaultStyleValues.Color);var gpmlFillColor=gpmlShape.select("Graphics").attr("FillColor")||defaults.FillColor;jsonShape=pathvisiojs.data.gpml.element.node.setJsonBackgroundColor(jsonShape,gpmlFillColor),jsonShape=pathvisiojs.data.gpml.element.node.entityNode.setJsonRotationValue(jsonShape,gpmlShape.select("Graphics").attr("Rotation"),thisPathvisioDefaultStyleValues.Rotation),jsonShape=pathvisiojs.data.gpml.setBorderStyleAsJson(jsonShape,gpmlShape.select("Graphics").attr("LineStyle"),thisPathvisioDefaultStyleValues.LineStyle),callback(jsonShape)})})}var defaults={Color:"000000",FillColor:"Transparent",FontSize:10,FontWeight:"Normal",LineStyle:"Solid"},pathvisioDefaultStyleValues={Shape:{Rotation:"0.0",Color:null,FillColor:null,FontSize:10,FontWeight:null,LineStyle:null,LineThickness:null,Cell:{Color:"c0c0c0",LineStyle:"Broken"},Nucleus:{Color:"c0c0c0"},EndoplasmicReticulum:{Color:"c0c0c0"},GolgiApparatus:{Color:"c0c0c0"},Mitochondria:{Color:"c0c0c0"},SarcoplasmicReticulum:{Color:"c0c0c0"},Organelle:{Color:"c0c0c0"},Vesicle:{Color:"c0c0c0"},ExtracellularRegion:{Color:"c0c0c0"}}};return{toPvjson:toPvjson}}(),pathvisiojs.data.gpml.node.anchor=function(){"use strict";function toPvjson(gpmlParentElement,jsonParentElement,elementType,pathwayIri,callback){var gpmlAnchors,gpmlAnchor,jsonAnchor,elementIri,graphId;if("edge"!==elementType)throw new Error("anchor.toPvjson doesnt know how to handle anything other than edges as parent elements right now. handling other elements needs to be implemented.");gpmlAnchors=gpmlParentElement.selectAll("Anchor"),gpmlAnchors[0].length>0?(jsonParentElement.Anchor=[],gpmlAnchors.each(function(){jsonAnchor={},gpmlAnchor=d3.select(this),graphId=gpmlAnchor.attr("GraphId")||"id"+uuid.v4(),elementIri=""+graphId,jsonAnchor.id=elementIri,jsonAnchor["@type"]=["node","element","Element","Anchor"],jsonAnchor.dependsOn=jsonParentElement.id,jsonAnchor.anchorPosition=gpmlAnchor.attr("Position"),jsonParentElement.stroke&&(jsonAnchor.backgroundColor=jsonParentElement.stroke),jsonAnchor.ShapeType=gpmlAnchor.attr("Shape"),jsonAnchor.ShapeType?"Circle"===jsonAnchor.ShapeType&&(jsonAnchor.ShapeType="oval"):jsonAnchor.ShapeType="none",jsonParentElement.Anchor.push(jsonAnchor)}),callback(jsonParentElement)):callback(jsonParentElement)}function getAllFromNode(jsonNode){self.jsonNode=jsonNode;var parentId,renderableType,id,x,y,sideOffsetX,sideOffsetY,positionOffsetX,positionOffsetY,jsonAnchors=[],elementSides=[{side:"top",dx:0,dy:-1},{side:"right",dx:1,dy:0},{side:"bottom",dx:0,dy:1},{side:"left",dx:-1,dy:0}],anchorPositions=[.25,.5,.75];return parentId=jsonNode.id,renderableType="anchor",elementSides.forEach(function(element){sideOffsetX=Math.max(element.dx,0)*jsonNode.width,sideOffsetY=Math.max(element.dy,0)*jsonNode.height,anchorPositions.forEach(function(position){id=String(jsonNode.id)+String(element.side)+String(position),positionOffsetX=Math.abs(element.dy)*position*jsonNode.width,positionOffsetY=Math.abs(element.dx)*position*jsonNode.height,x=jsonNode.x+sideOffsetX+positionOffsetX,y=jsonNode.y+sideOffsetY+positionOffsetY,jsonAnchors.push({parentId:jsonNode.id,renderableType:"anchor",side:element.side,dx:element.dx,dy:element.dy,id:id,position:position,x:x,y:y})})}),jsonAnchors}return{toPvjson:toPvjson,getAllFromNode:getAllFromNode}}(),pathvisiojs.data.gpml.edge=function(){"use strict";function toPvjson(gpmlEdge,pathwayIri,callback){var points,jsonEdge={},graphId=gpmlEdge.attr("GraphId")||"id"+uuid.v4(),elementIri=""+graphId;jsonEdge.id=elementIri,jsonEdge.GraphId=graphId;var isContainedBy,containingGroupRef=gpmlEdge.attr("GroupRef"),dependsOn=[];containingGroupRef&&(isContainedBy=jsonEdge.isContainedBy=""+containingGroupRef,dependsOn.push(isContainedBy)),jsonEdge.zIndex=parseFloat(gpmlEdge.select("Graphics").attr("ZOrder"));var points=gpmlEdge.selectAll("Point");jsonEdge["@type"]=["element","SvgPath","Edge",isContainedBy||"notGrouped"];var point,pointObj;jsonEdge.Point=[],points.each(function(){point=d3.select(this),pointObj={};var relX=parseFloat(point.attr("RelX")),relY=parseFloat(point.attr("RelY"));null!==relX&&void 0!==relX&&null!==relY&&void 0!==relY?(pointObj["@type"]="SnappedPoint",dependsOn.push(""+point.attr("GraphRef")),pointObj.hasReference=""+point.attr("GraphRef"),pointObj.RelX=relX,pointObj.RelY=relY,pointObj.x=parseFloat(point.attr("X")),pointObj.y=parseFloat(point.attr("Y"))):(pointObj["@type"]="GraphicalPoint",pointObj.x={},pointObj.x=parseFloat(point.attr("X")),pointObj.y=parseFloat(point.attr("Y"))),jsonEdge.Point.push(pointObj)});var connectorType=gpmlEdge.select("Graphics").attr("ConnectorType")||"Straight";jsonEdge.ConnectorType=""+connectorType;var stroke=gpmlEdge.select("Graphics").attr("Color");stroke&&(jsonEdge.stroke=stroke);var strokeWidth=gpmlEdge.select("Graphics").attr("LineThickness");strokeWidth&&(jsonEdge.strokeWidth=parseFloat(strokeWidth)),pathvisiojs.data.gpml.node.anchor.toPvjson(gpmlEdge,jsonEdge,"edge",pathwayIri,function(jsonEdge){pathvisiojs.data.gpml.element.toPvjson(gpmlEdge,jsonEdge,function(jsonEdge){callback(jsonEdge)})})}return{toPvjson:toPvjson}}(),pathvisiojs.data.gpml.edge.interaction=function(){"use strict";function getGpmlArrowHeadNameFromSemanticName(semanticName){for(gpmlArrowHeadName in gpmlArrowHeadsToSemanticMappings)if(gpmlArrowHeadsToSemanticMappings[gpmlArrowHeadName]===semanticName)return gpmlArrowHeadName;return gpmlArrowHeadName||(gpmlArrowHeadName=semanticName,console.warn('No GPML ArrowHead name found for semantic name "'+semanticName+'". Returning original semantic name as GPML ArrowHead name. PathVisio-Java will delete this ArrowHead from the GPML file if it edits this file.')),gpmlArrowHeadName}function getSemanticNameFromGpmlArrowHeadName(gpmlArrowHeadName){var semanticName;return gpmlArrowHeadName?(semanticName=gpmlArrowHeadsToSemanticMappings[gpmlArrowHeadName],semanticName||(semanticName=gpmlArrowHeadName,console.warn('No semantic name found for GPML ArrowHead name "'+gpmlArrowHeadName+'". Returning original GPML ArrowHead name as semantic name.'))):semanticName="Unspecified",semanticName}function toPvjson(gpml,gpmlInteraction,pathwayIri,callback){var points,interactionType,target,targetId,source,sourceId;pathvisiojs.data.gpml.edge.toPvjson(gpmlInteraction,pathwayIri,function(jsonInteraction){function buildInteractionGraph(gpmlSource,gpmlTarget,callbackBIG){var InteractionGraphMember={};jsonInteraction.InteractionGraph=jsonInteraction.InteractionGraph||[],sourceId=gpmlSource.getAttribute("GraphRef"),sourceId&&(source=gpml.querySelector("[GraphId="+sourceId+"]"),"Anchor"===source.tagName?sourceId=source.parentNode.parentNode.getAttribute("GraphId"):"Group"===source.tagName&&(sourceId=source.getAttribute("GroupId"))),InteractionGraphMember.id=sourceId||"no-source",targetId=gpmlTarget.getAttribute("GraphRef"),targetId&&(target=gpml.querySelector("[GraphId="+targetId+"]"),"Anchor"===target.tagName?targetId=target.parentNode.parentNode.getAttribute("GraphId"):"Group"===target.tagName&&(targetId=target.getAttribute("GroupId")),InteractionGraphMember.interactsWith=targetId),jsonInteraction.InteractionGraph.push(InteractionGraphMember),callbackBIG(InteractionGraphMember)}jsonInteraction["@type"].push("Interaction"),jsonInteraction.renderableType="Interaction",points=gpmlInteraction.selectAll("Point");var database,ID,datasourceReference=gpmlInteraction.select("Xref");datasourceReference&&(database=datasourceReference.attr("Database"),ID=datasourceReference.attr("ID"),database&&ID&&(jsonInteraction.DatasourceReference={},jsonInteraction.DatasourceReference.Database=database,jsonInteraction.DatasourceReference.ID=ID));var firstPoint=points[0][0],firstGpmlArrowHeadName=firstPoint.getAttribute("ArrowHead"),lastPoint=points[0][points[0].length-1],lastGpmlArrowHeadName=lastPoint.getAttribute("ArrowHead");firstGpmlArrowHeadName&&lastGpmlArrowHeadName?(interactionType=getSemanticNameFromGpmlArrowHeadName(firstPoint.getAttribute("ArrowHead")+lastPoint.getAttribute("ArrowHead")),buildInteractionGraph(lastPoint,firstPoint,function(){}),buildInteractionGraph(firstPoint,lastPoint,function(){})):firstGpmlArrowHeadName||lastGpmlArrowHeadName?(firstGpmlArrowHeadName&&(buildInteractionGraph(lastPoint,firstPoint,function(){}),interactionType=getSemanticNameFromGpmlArrowHeadName(firstPoint.getAttribute("ArrowHead"))),lastGpmlArrowHeadName&&(interactionType=getSemanticNameFromGpmlArrowHeadName(lastPoint.getAttribute("ArrowHead")),buildInteractionGraph(firstPoint,lastPoint,function(){}))):(lastPoint.setAttribute("ArrowHead","Line"),interactionType=getSemanticNameFromGpmlArrowHeadName(lastPoint.getAttribute("ArrowHead")),buildInteractionGraph(firstPoint,lastPoint,function(){})),interactionType?(jsonInteraction["@type"].push(interactionType),jsonInteraction.interactionType=strcase.paramCase(interactionType)):(jsonInteraction["@type"].push("unspecified"),jsonInteraction.interactionType="unspecified",console.warn('Interaction Type unable to be determined. Setting it to "unspecified."')),jsonInteraction.markerStart=firstGpmlArrowHeadName?strcase.paramCase(firstGpmlArrowHeadName):"none",jsonInteraction.markerEnd=lastGpmlArrowHeadName?strcase.paramCase(lastGpmlArrowHeadName):"none",callback(jsonInteraction)})}var gpmlArrowHeadsToSemanticMappings={Arrow:"Activity",ArrowArrow:"BidirectionalActivity",TBar:"InhibitoryActivity","mim-catalysis":"Catalysis","mim-inhibition":"Inhibition","mim-branching-left":"mim-branching-left","mim-branching-right":"mim-branching-right","mim-necessary-stimulation":"NecessaryStimulation","mim-binding":"Binding","mim-conversion":"Conversion","mim-stimulation":"Stimulation","mim-modification":"Modification","mim-cleavage":"Cleavage","mim-covalent-bond":"CovalentBond","mim-transcription-translation":"TranscriptionTranslation","mim-gap":"Gap",Line:"Unspecified"};return{toPvjson:toPvjson,getGpmlArrowHeadNameFromSemanticName:getGpmlArrowHeadNameFromSemanticName,getSemanticNameFromGpmlArrowHeadName:getSemanticNameFromGpmlArrowHeadName}}(),pathvisiojs.data.gpml.edge.graphicalLine=function(){"use strict";function toPvjson(gpml,gpmlGraphicalLine,pathwayIri,callback){var points;pathvisiojs.data.gpml.edge.toPvjson(gpmlGraphicalLine,pathwayIri,function(jsonGraphicalLine){jsonGraphicalLine["@type"].push("GraphicalLine"),jsonGraphicalLine.renderableType="GraphicalLine",points=gpmlGraphicalLine.selectAll("Point");var firstPoint=points[0][0];jsonGraphicalLine.markerStart=firstPoint.getAttribute("ArrowHead")?strcase.paramCase(firstPoint.getAttribute("ArrowHead")):"none";var lastPoint=points[0][points[0].length-1];lastPoint.getAttribute("ArrowHead")?jsonGraphicalLine.markerEnd=strcase.paramCase(lastPoint.getAttribute("ArrowHead")):(console.log("markerEnd = none"),jsonGraphicalLine.markerEnd="none"),jsonGraphicalLine.ConnectorType=gpmlGraphicalLine.select("Graphics").attr("ConnectorType"),jsonGraphicalLine.ConnectorType||(jsonGraphicalLine.ConnectorType="Straight"),callback(jsonGraphicalLine)})}return{toPvjson:toPvjson}}(),pathvisiojs.data.gpml.edge.point=function(){"use strict";function toPvjson(gpmlPoint,callback){var jsonPoint={};try{jsonPoint.x=parseFloat(gpmlPoint.attr("X")),jsonPoint.y=parseFloat(gpmlPoint.attr("Y"));var side,position,relX=String(gpmlPoint.attr("RelX")),relY=String(gpmlPoint.attr("RelY"));relX&&relY&&"null"!=relX&&"null"!=relY&&("0.0"==relX&&"0.0"==relY?jsonPoint.anchorId=gpmlPoint.attr("GraphRef"):(side=void 0!==gpmlRelXToJsonSideAndPositionMapping[relX].side?gpmlRelXToJsonSideAndPositionMapping[relX].side:gpmlRelYToJsonSideAndPositionMapping[relY].side,position=void 0!==gpmlRelXToJsonSideAndPositionMapping[relX].position?gpmlRelXToJsonSideAndPositionMapping[relX].position:gpmlRelYToJsonSideAndPositionMapping[relY].position,jsonPoint.anchorId=String(gpmlPoint.attr("GraphRef"))+String(side)+String(position))),callback(jsonPoint)}catch(e){return console.log("Error converting point to json: "+e.message),e}}var gpmlRelXToJsonSideAndPositionMapping={"-1.0":{side:"left"},"-0.5":{position:.25},"0.0":{position:.5},.5:{position:.75},"1.0":{side:"right"}},gpmlRelYToJsonSideAndPositionMapping={"-1.0":{side:"top"},"-0.5":{position:.25},"0.0":{position:.5},.5:{position:.75},"1.0":{side:"bottom"}};return{toPvjson:toPvjson}}(),pathvisiojs.view=pathvisiojs.view||{},pathvisiojs.view.annotation=function(){"use strict";function render(annotationData){self.annotationData=annotationData;var annotation=d3.select("#annotation").data([annotationData]),dragAbs=d3.behavior.drag().on("drag",function(){var dright=parseInt(annotation.style("right")),dtop=parseInt(annotation.style("top"));dright-=d3.event.dx,dtop+=d3.event.dy,annotation.style("right",dright+"px"),annotation.style("top",dtop+"px")});annotation.select("#annotation-header-text").text(function(d){return d.header}),annotation.select("#annotation-header-search").select("a").attr("href",function(d){return pathvisiojs.config.pathwaySearchUriStub+d.header}).attr("title",function(d){return"Search for pathways containing "+d.header}),annotation.select("i.icon-move").on("mousedown",function(){annotation.call(dragAbs)}).on("mouseup",function(){annotation.on("mousedown.drag",null)}),annotation.select("i.icon-remove").on("click",function(){annotation[0][0].style.visibility="hidden"});var annotationDescription=annotation.select("#annotation-description").text(function(d){return d.description}),annotationListItemsContainer=annotation.selectAll("#annotation-items-container").data(function(d){return"string"==typeof d.listItems[0]?("gif"==d.listItems[0].split(".").pop()?(annotationDescription.append("br"),annotationDescription.append("br"),annotationDescription.append("img").attr("src",d.listItems[0]).attr("style","width: 20px")):annotationDescription.append("p").html('<font color="red">'+d.listItems[0]+"</font>"),[{key:"clear",values:[{clear:"clear"}]}]):[d.listItems]}),annotationListItems=annotationListItemsContainer.selectAll("li").data(function(d){return d});annotationListItems.enter().append("li"),annotationListItems.exit().remove();var annotationItemTitles=annotationListItems.selectAll(".annotation-item-title").data(function(d){return[d.key]}).text(function(d){return d+": "});annotationItemTitles.enter().append("span").attr("class","annotation-item-title").text(function(d){return d+": "}),annotationItemTitles.exit().remove();var annotationItemPlainTextElements=annotationListItems.selectAll("span.annotation-item-text").data(function(d){return d.values.filter(function(element){return element.hasOwnProperty("uri")?void 0:element})}).text(function(d){return" "+d.text});annotationItemPlainTextElements.enter().append("span").attr("class","annotation-item-text").text(function(d){return" "+d.text}),annotationItemPlainTextElements.exit().remove();var annotationItemLinkedTextElements=annotationListItems.selectAll("a.annotation-item-text").data(function(d){return d.values.filter(function(element){return element.hasOwnProperty("uri")?element:void 0})}).attr("href",function(d){return d.uri}).attr("class","annotation-item-text").text(function(d){return" "+d.text});annotationItemLinkedTextElements.enter().append("a").attr("href",function(d){return d.uri}).attr("class","annotation-item-text").text(function(d){return" "+d.text}),annotationItemLinkedTextElements.exit().remove(),annotation[0][0].style.visibility="visible"}return{render:render}}(),pathvisiojs.view.annotation.citation=function(){"use strict";function render(){}return{render:render}}(),pathvisiojs.view.annotation.xRef=function(){"use strict";function render(organism,id,datasource,label,desc){var data=getCachedAnnotationData(organism,label,id,datasource);if(data)pathvisiojs.view.annotation.render(data);else{var data={header:label,description:desc,listItems:[pathvisiojs.config.diagramLoadingIconUri]};pathvisiojs.view.annotation.render(data),pathvisiojs.data.bridgedb.getXrefAnnotationDataByDataNode(organism,id,datasource,label,desc,function(annotationData){setCachedAnnotationData(organism,label,id,datasource,annotationData),pathvisiojs.view.annotation.render(annotationData)})}}function getCachedAnnotationData(organism,label,id,datasource){return cachedAnnotationData[organism+label+id+datasource]}function setCachedAnnotationData(organism,label,id,datasource,data){cachedAnnotationData[organism+label+id+datasource]=data}var cachedAnnotationData={};return{render:render}}(),pathvisiojs.view.pathwayDiagram=function(){"use strict";function getFirstRenderableSourceDataElement(sourceData){var sourceDataElement,viewMethodsForSourceDataFileType,supportedViewMethodsForSourceDataFileType,supportedViewMethods=getSupportedViewMethods(),i=0;do sourceDataElement=sourceData[i],viewMethodsForSourceDataFileType=sourceDataFileTypeToViewMethodMappings[sourceDataElement.fileType],supportedViewMethodsForSourceDataFileType=pathvisiojs.utilities.intersect(viewMethodsForSourceDataFileType,supportedViewMethods),i+=1;while(supportedViewMethodsForSourceDataFileType.length<1&&i<sourceData.length+1);return sourceDataElement.selectedViewMethod=supportedViewMethodsForSourceDataFileType[0],sourceDataElement}function getSupportedViewMethods(){var supportedViewMethods=["img"];return Modernizr.inlinesvg&&supportedViewMethods.push("svg"),supportedViewMethods}function loadHtmlTemplate(userSpecifiedContainer,callback){userSpecifiedContainer.html(pathvisioNS["src/pathvisiojs.html"]);var diagramContainer=userSpecifiedContainer.select("#diagram-container");callback(diagramContainer)}function load(args){var userSpecifiedContainer,diagramContainer,userSpecifiedContainerSelector=args.container,sourceData=args.sourceData,fitToContainer=args.fitToContainer,cssUri=args.cssUri,customMarkers=args.customMarkers,highlights=args.highlights;if(args.hiddenElements,!sourceData[0].uri)throw new Error("No sourceData uri specified.");if(!userSpecifiedContainerSelector)throw new Error("No container selector specified as container for pathvisiojs.");if(userSpecifiedContainer=d3.select(userSpecifiedContainerSelector),1!==userSpecifiedContainer.length)throw new Error("Container selector must be matched by exactly one element.");
async.waterfall([function(callback){loadHtmlTemplate(userSpecifiedContainer,function(thisPathwayContainer){diagramContainer=thisPathwayContainer,callback(null)})},function(callback){var diagramLoadingIconUri=pathvisiojs.config.diagramLoadingIconUri;diagramContainer.append("img").attr("id","loading-icon").attr("src",diagramLoadingIconUri).attr("width",50);var renderableSourceDataElement=getFirstRenderableSourceDataElement(sourceData),boundingClientRect=userSpecifiedContainer[0][0].getBoundingClientRect(),containerWidth=boundingClientRect.width-3,containerHeight=boundingClientRect.height-3;callback(null,containerWidth,containerHeight,renderableSourceDataElement)},function(containerWidth,containerHeight,renderableSourceDataElement,callback){var loadDiagramArgs={};loadDiagramArgs.container=diagramContainer,loadDiagramArgs.renderableSourceDataElement=renderableSourceDataElement,loadDiagramArgs.containerWidth=containerWidth,loadDiagramArgs.containerHeight=containerHeight,loadDiagramArgs.fitToContainer=fitToContainer,loadDiagramArgs.highlights=highlights,"svg"===renderableSourceDataElement.selectedViewMethod?(loadDiagramArgs.cssUri=cssUri,loadDiagramArgs.customMarkers=customMarkers,pathvisiojs.view.pathwayDiagram.svg.load(loadDiagramArgs,function(diagram){diagram?callback(null,diagram):(loadDiagramArgs.renderableSourceDataElement=sourceData[1],pathvisiojs.view.pathwayDiagram.img.load(loadDiagramArgs,function(diagram){callback(null,diagram)}))})):pathvisiojs.view.pathwayDiagram.img.load(loadDiagramArgs,function(diagram){callback(null,diagram)})},function(diagram,callback){diagramContainer.select("#loading-icon").remove(),d3.select("body").append("span").attr("id","pathvisiojs-is-loaded"),callback(null)}])}var sourceDataFileTypeToViewMethodMappings={gpml:["svg"],biopax:["svg"],pdf:["pdf"],png:["img"],jpg:["img"],jpeg:["img"],jpe:["img"],jif:["img"],jfif:["img"],jfi:["img"],gif:["img"],ico:["img"],bmp:["img"],dib:["img"]};return{load:load}}(),pathvisiojs.view.pathwayDiagram.svg=function(){"use strict";function fitAndCenterDiagramWithinViewport(viewport,viewportWidth,viewportHeight,diagramWidth,diagramHeight){var fitScreenScale=Math.min(viewportWidth/diagramWidth,viewportHeight/diagramHeight),diagramWidthScaled=fitScreenScale*diagramWidth,diagramHeightScaled=fitScreenScale*diagramHeight,xTranslation=viewportWidth/2-diagramWidthScaled/2+10,yTranslation=viewportHeight/2-diagramHeightScaled/2+20,translationMatrixString="matrix("+fitScreenScale+", 0, 0, "+fitScreenScale+", "+xTranslation+", "+yTranslation+") ";viewport.attr("transform",translationMatrixString)}function load(args,callbackOutside){var pathway,diagramContainer,svg,diagramContainer=args.container,containerWidth=args.containerWidth,containerHeight=args.containerHeight,cssUri=args.cssUri,renderableSourceDataElement=args.renderableSourceDataElement,fitToContainer=args.fitToContainer,customMarkers=args.customMarkers,highlights=args.highlights;async.waterfall([function(callback){async.parallel({preloadSvg:function(callback){var preloadDiagramArgs={};preloadDiagramArgs.container=diagramContainer,preloadDiagramArgs.customMarkers=customMarkers,preloadDiagramArgs.cssUri=cssUri,pathvisiojs.view.pathwayDiagram.svg.loadPartials(preloadDiagramArgs,function(svgTemplate){if(svg=svgTemplate,!svg)throw new Error("Could not load SVG template.");callback(null)})},pathway:function(callback){pathvisiojs.data.pvjson.get(renderableSourceDataElement,function(json){if(pathvisiojs.context=json["@context"],!json||"fail"===json)throw callbackOutside(null),new Error("Could not convert input source data to pathvisioJsJson.");pathway=json,callback(null,json)})}},function(){callback(null)})},function(callback){pathvisiojs.view.pathwayDiagram.svg.renderWithCachedData(svg,pathway,function(){callback(null)})},function(callback){highlights&&highlights.forEach(function(highlight){pathvisiojs.view.pathwayDiagram.svg.node.highlight(highlight)});var viewport=svg.select("#viewport");fitToContainer&&fitAndCenterDiagramWithinViewport(viewport,containerWidth,containerHeight,pathway.image.width,pathway.image.height),d3.select("#reset-pan-zoom").on("click",function(){fitAndCenterDiagramWithinViewport(viewport,containerWidth,containerHeight,pathway.image.width,pathway.image.height)}),svgPanZoom.init({selector:"svg",zoomEnabled:!1,minZoom:"0.1",maxZoom:"8.0"});var svgInFocus=!1;svg.on("click",function(){svgPanZoom.enableZoom(),svgInFocus=!0}).on("mouseenter",function(){svgInFocus&&svgPanZoom.enableZoom()}).on("mouseleave",function(){svgInFocus&&(svgPanZoom.disableZoom(),svgInFocus=!1)}),callback(null)},function(callback){var nodeLabels,nodeLabel;pathway&&(nodeLabels=[],pathway.hasOwnProperty("DataNode")&&(pathway.DataNode.forEach(function(node){node.hasOwnProperty("text")&&(nodeLabel=node.text.line[0],-1===nodeLabels.indexOf(nodeLabel)&&nodeLabels.push(node.text.line[0]))}),$("#highlight-by-label-input").typeahead({name:"Highlight node in pathway",local:nodeLabels,limit:10})),$("#highlight-by-label-input").bind("typeahead:selected",function(){if(nodeLabel=$("#highlight-by-label-input").val(),!nodeLabel)throw new Error("No data node value entered for type-ahead node highlighter.");pathvisiojs.view.pathwayDiagram.svg.node.highlightByLabel(svg,pathway,nodeLabel)}),d3.select("#clear-highlights-from-typeahead").on("click",function(){pathvisiojs.view.pathwayDiagram.svg.node.clearHighlightsFromTypeahead()}),callback(null,"svg loaded"))}],function(){callbackOutside(svg)})}function loadPartials(args,callbackOutside){var diagramContainer=args.container,customMarkers=args.customMarkers,cssUri=args.cssUri;async.series([function(callback){diagramContainer.html(pathvisioNS["tmp/pathvisiojs.svg"]),svg=diagramContainer.select("#pathvisiojs-diagram"),svg.attr("style","display: inline; width: inherit; min-width: inherit; max-width: inherit; height: inherit; min-height: inherit; max-height: inherit; ").attr("preserveAspectRatio","xMidYMid"),callback(null)},function(callback){args.customMarkers?pathvisiojs.view.pathwayDiagram.svg.edge.marker.loadAllCustom(svg,customMarkers,function(){callback(null)}):callback(null)},function(callback){cssUri?d3.text(cssUri,"text/css",function(data){var defs=svg.select("defs"),style=defs.append("style").attr("type","text/css");style.text(data),callback(null)}):callback(null)}],function(){callbackOutside(svg)})}function appendElementsInDomOrder(args,callback){var container,svg=args.svg,data=args.data,pathway=args.pathway,viewport=args.container;if(!viewport)throw new Error("No viewport specified.");if(!data)throw new Error("No data entered to render.");if(!svg)throw new Error("No svg specified.");if(!pathway)throw new Error("No pathway specified.");data=pathvisiojs.utilities.convertToArray(data);var i=0;async.each(data,function(item,callbackInside){container="undefined"!==item.key?viewport.select("#"+convertToId(item.key)):viewport,container.selectAll(".element").data(item.values).enter().append(function(d){var childElementName=renderableTypeToSvgElementMappings[strcase.camelCase(d.renderableType)],child=document.createElementNS("http://www.w3.org/2000/svg",childElementName);return child}).attr("id",function(d){return convertToId(d.id)}).attr("class","element"),i+=1,callbackInside(null)},function(){callback(null,"Successfully rendered elements")})}function updateElementProperties(args,callback){var svg=args.svg,data=args.data,pathway=args.pathway,container=args.container;if(!container)throw new Error("No container specified.");if(!data)throw new Error("No data entered to render.");if(!svg)throw new Error("No svg specified.");if(!pathway)throw new Error("No pathway specified.");data=pathvisiojs.utilities.convertToArray(data);var renderingArgs=args;data.forEach(function(dataElement){renderingArgs.data=dataElement,renderingArgs.element=d3.select("#"+convertToId(dataElement.id)),"GraphicalLine"===dataElement.renderableType?pathvisiojs.view.pathwayDiagram.svg.edge.graphicalLine.render(renderingArgs):"Interaction"===dataElement.renderableType?pathvisiojs.view.pathwayDiagram.svg.edge.interaction.render(renderingArgs):"GroupNode"===dataElement.renderableType?pathvisiojs.view.pathwayDiagram.svg.node.groupNode.render(renderingArgs,function(){}):"EntityNode"===dataElement.renderableType&&pathvisiojs.view.pathwayDiagram.svg.node.EntityNode.render(renderingArgs)}),callback(null,"Successfully rendered elements")}function renderWithCachedData(svg,pathway,callback){if(!svg)throw new Error("No svg specified.");if(!pathway)throw new Error("No data entered to render.");var viewport=svg.select("#viewport");pathvisiojs.view.pathwayDiagram.svg.infoBox.render(viewport,pathway);var renderArgs={};renderArgs.svg=svg,renderArgs.container=viewport,renderArgs.pathway=pathway,async.waterfall([function(callbackInside){renderArgs.data=pathway.pathwayNestedByGrouping,appendElementsInDomOrder(renderArgs,function(){callbackInside(null,svg)})},function(svg){renderArgs.data=pathway.elements,updateElementProperties(renderArgs,function(){callback(svg)})}])}var svg,renderableTypeToSvgElementMappings={entityNode:"g",groupNode:"g",interaction:"path",graphicalLine:"path"},convertToId=function(inputString){var id=strcase.paramCase(inputString);return/^[a-zA-Z]/.test(id)||(id="id-"+id),id},convertToCssClassName=function(inputString){var cssClassName=strcase.paramCase(inputString);return/^[a-zA-Z]/.test(cssClassName)||(cssClassName="class-"+cssClassName),cssClassName};return{convertToId:convertToId,convertToCssClassName:convertToCssClassName,renderWithCachedData:renderWithCachedData,appendElementsInDomOrder:appendElementsInDomOrder,load:load,loadPartials:loadPartials}}(),pathvisiojs.view.pathwayDiagram.svg.infoBox=function(){"use strict";function render(viewport,pathway){if(!viewport||!pathway)return console.warn("Error: Missing input parameters.");var infoBox=[];pathway.hasOwnProperty("Name")&&infoBox.push({key:"Title",value:pathway.Name}),pathway.hasOwnProperty("License")&&infoBox.push({key:"Availability",value:pathway.License}),pathway.hasOwnProperty("LastModified")&&infoBox.push({key:"Last modified",value:pathway.LastModified}),pathway.hasOwnProperty("Organism")&&infoBox.push({key:"Organism",value:pathway.Organism});var infoBox=viewport.selectAll("g.info-box").data([infoBox]).enter().append("g").attr("id",function(d,i){return"info-box-"+i}).attr("class","text-area info-box"),infoBoxItems=infoBox.selectAll("text").data(function(d){return d}).enter().append("text").attr("id",function(d,i){return"info-box-text"+i}).attr("class","item").attr("x",0).attr("y",function(d,i){return 14+14*i});infoBoxItems.append("tspan").attr("class","info-box-item-property-name").text(function(d){return d.key+": "}),infoBoxItems.append("tspan").attr("class","info-box-item-property-value").text(function(d){return d.value})}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.symbol=function(){"use strict";function appendCustom(uniqueSymbolShapeUri,callback){var img,width,height,imgChildren,symbolId=strcase.paramCase(uniqueSymbolShapeUri),defsSection=svg.select("defs"),symbol=defsSection.select("#"+symbolId);symbol[0][0]?symbol.selectAll("*").remove():symbol=defsSection.append("symbol").attr("id",symbolId).attr("preserveAspectRatio","none"),d3.xml(uniqueSymbolShapeUri,"image/svg+xml",function(svgXml){img=d3.select(svgXml.documentElement),width=img.attr("width"),height=img.attr("height"),symbol.attr("viewBox","0 0 "+width+" "+height),imgChildren=img[0][0].children;do symbol[0][0].appendChild(imgChildren[0]);while(imgChildren.length>0);callback(null)})}function loadAllCustom(thisSvg,customSymbols,callback){svg=thisSvg;var uniqueSymbolShapeUris=[];customSymbols.forEach(function(customSymbol){semanticNameToIdMapping[customSymbol.semanticName]=strcase.paramCase(customSymbol.uri),-1===uniqueSymbolShapeUris.indexOf(customSymbol.uri)&&uniqueSymbolShapeUris.push(customSymbol.uri)}),async.each(uniqueSymbolShapeUris,appendCustom,function(){callback(null)})}function getAllSymbolNames(svg,callback){var allSymbolNames=svg.selectAll("symbol")[0].map(function(symbol){return strcase.paramCase(symbol.id)});callback(allSymbolNames)}var svg,semanticNameToIdMapping={datanode:"shape-library-symbols-rectangle-svg"};return{loadAllCustom:loadAllCustom,semanticNameToIdMapping:semanticNameToIdMapping,getAllSymbolNames:getAllSymbolNames}}(),pathvisiojs.view.pathwayDiagram.svg.publicationXref=function(){"use strict";function getReferenceNumberForDisplay(pathway,rdfId){var currentPublicationXref,displayNumberForDisplay=null,i=-1,found=!1;do i+=1,currentPublicationXref=pathway.Biopax.PublicationXref[i],"undefined"!=typeof currentPublicationXref&&currentPublicationXref.rdfId===rdfId&&(found=!0,displayNumberForDisplay=i+1);while(found===!1&&i<pathway.Biopax.PublicationXref.length);return displayNumberForDisplay}function createPublicationXrefString(displayNumbers){var publicationXrefString;if(1===displayNumbers.length)publicationXrefString=displayNumbers[0];else{displayNumbers.sort(function(a,b){return a-b});var i=0;if(publicationXrefString=displayNumbers[i].toString(),displayNumbers.length>2)do i+=1,(displayNumbers[i-1]+1!==displayNumbers[i]||displayNumbers[i]+1!==displayNumbers[i+1])&&(publicationXrefString+=1!==i?displayNumbers[i-2]+2===displayNumbers[i]?"-"+displayNumbers[i].toString():", "+displayNumbers[i].toString():", "+displayNumbers[i].toString());while(i<displayNumbers.length-2);i+=1,publicationXrefString+=displayNumbers[i-2]+2===displayNumbers[i]?"-"+displayNumbers[i].toString():", "+displayNumbers[i].toString()}return publicationXrefString}function getPublicationXrefString(pathway,rdfIds,callback){var displayNumbers=[],publicationXrefString="";rdfIds=pathvisiojs.utilities.convertToArray(rdfIds),rdfIds.forEach(function(rdfId){var num=getReferenceNumberForDisplay(pathway,rdfId);num&&displayNumbers.push(num)}),displayNumbers.length>0&&(publicationXrefString=createPublicationXrefString(displayNumbers)),callback(publicationXrefString)}function render(target,targetType,pathway,rdfIds){var viewport,text;getPublicationXrefString(pathway,rdfIds,function(publicationXrefString){if("node"===targetType){var nodeWidth=target[0][0].__data__.width,textLength=publicationXrefString.toString().length,offset=nodeWidth-3*textLength/2-2;target.append("text").attr("class","citation").attr("transform",function(){return"translate("+offset+" -4)"}).text(publicationXrefString)}else{if(viewport=d3.select("svg > #viewport"),"edge"!==targetType)throw new Error("Pathvisiojs cannot render a citation for targets of this type: "+targetType);viewport=d3.select("svg > #viewport"),text=viewport.append("text").attr("class","citation").attr("transform",function(){return"translate(0 -10)"}),text.append("textPath").attr("xlink:xlink:href","#"+target).attr("startOffset","50%").text(publicationXrefString)}})}return{getPublicationXrefString:getPublicationXrefString,render:render}}(),pathvisiojs.view.pathwayDiagram.svg.node=function(){"use strict";function dragmove(d){d.x=d3.event.x,d.y=d3.event.y}function render(args,callback){if(!args)throw new Error("Need input args to render a node.");var parentDataElement,translatedX,translatedY,nodeContainer=args.element,data=args.data,pathway=args.pathway;if(!pathway)throw new Error("Need a pathway to render a node.");if(!nodeContainer)throw new Error("Need a nodeContainer to render a node.");if(!data)throw new Error("Need input data to render a node.");data.hasOwnProperty("isContainedBy")?(parentDataElement=pathway.elements.filter(function(element){return element.id===data.isContainedBy})[0],translatedX=data.x-parentDataElement.x,translatedY=data.y-parentDataElement.y):(translatedX=data.x,translatedY=data.y);var drag=d3.behavior.drag().origin(Object).on("drag",dragmove);nodeContainer.attr("transform",function(){return"translate("+translatedX+" "+translatedY+")"}).attr("style",function(d){var style="";return d.hasOwnProperty("backgroundColor")&&(style="brace"==d.ShapeType||"arc"==d.ShapeType?"fill-opacity:0; ":"Label"==d.nodeType&&"#ffffff"==d.backgroundColor?"":"fill:"+d.backgroundColor+"; fill-opacity:1; "),style}).call(drag),strcase.paramCase(data.ShapeType),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.render(nodeContainer,data),data.hasOwnProperty("text")&&pathvisiojs.view.pathwayDiagram.svg.node.text.render(nodeContainer,data),data.hasOwnProperty("PublicationXref")&&pathvisiojs.view.pathwayDiagram.svg.publicationXref.render(nodeContainer,"node",args.pathway,data.PublicationXref),callback(nodeContainer)}function getPortCoordinates(boxDimensions,relX,relY){var port={};return port.x=boxDimensions.x+relX*boxDimensions.width,port.y=boxDimensions.y+relY*boxDimensions.height,port}function highlight(args){var selector,method,getSelector={selector:function(input){return input},label:function(input){var selector="."+pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName("label-"+decodeURIComponent(input));return selector},xref:function(input){var selector="."+pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName("xref-"+decodeURIComponent(input));return selector}},argsEntries=d3.map(args).entries(),methodsInGetSelector=d3.map(getSelector).entries(),i=0;do method=methodsInGetSelector.filter(function(methodsInGetSelector){return methodsInGetSelector.key===argsEntries[i].key}),method.length>0&&(selector=method[0].value(argsEntries[i].value)),i+=1;while(!selector&&i<argsEntries.length);var styles,cssClass=args.cssClass||"highlighted-node",style=args.style,svgId=args.svgId||"pathvisiojs-diagram",svg=d3.select("#"+svgId),styleString="";style&&(styles=d3.map(style).entries(),styles.forEach(function(styleAttribute){styleString+=strcase.paramCase(styleAttribute.key)+":"+styleAttribute.value+"; "}));var selectedNodes=svg.selectAll(selector);selectedNodes.each(function(){var node=d3.select(this),height=node[0][0].getBBox().height,width=node[0][0].getBBox().width;node.append("rect").attr("x",-2.5).attr("y",-2.5).attr("class",cssClass).attr("style",styleString).attr("width",width+5).attr("height",height+5)})}function highlightByLabel(svg,pathway,nodeLabel){var svgId=svg.attr("id")||"pathvisiojs-diagram";svg.selectAll(".highlighted-from-typeahead").remove();var args={};args.svgId=svgId,args.label=nodeLabel,args.cssClass="highlighted-node highlighted-from-typeahead",highlight(args),d3.select("#clear-highlights-from-typeahead")[0][0].style.visibility="visible"}function clearHighlightsFromTypeahead(svgId){svgId=svgId||"pathvisiojs-diagram";var svg=d3.select("#"+svgId);svg.selectAll(".highlighted-from-typeahead").remove();var highlightByLabelInput=d3.select("#highlight-by-label-input");highlightByLabelInput[0][0].value="",highlightByLabelInput.attr("placeholder",""),d3.select("#clear-highlights-from-typeahead")[0][0].style.visibility="hidden"}return{render:render,getPortCoordinates:getPortCoordinates,highlight:highlight,highlightByLabel:highlightByLabel,clearHighlightsFromTypeahead:clearHighlightsFromTypeahead}}(),pathvisiojs.view.pathwayDiagram.svg.node.anchor=function(){"use strict";function render(container,parentEdgeId,data){if(!container)throw new Error("container element not specified for rendering anchors.");if(!parentEdgeId)throw new Error("parentEdgeId missing for rendering anchors.");if(!data)throw new Error("anchor data missing for rendering anchors.");data=pathvisiojs.utilities.convertToArray(data);var defaultAnchorWidth=10,defaultAnchorHeight=10;container.selectAll(".node.anchor.parent-edge-"+pathvisiojs.view.pathwayDiagram.svg.convertToId(parentEdgeId)).data(data).enter().append("g").attr("transform",function(d){var anchorCoordinates=pathvisiojs.view.pathwayDiagram.svg.edge.getPointAtPositionById(parentEdgeId,d.anchorPosition),translateX=anchorCoordinates.x-defaultAnchorWidth/2,translateY=anchorCoordinates.y-defaultAnchorHeight/2;return"translate("+translateX+" "+translateY+")"}).attr("class","node anchor parent-edge-"+pathvisiojs.view.pathwayDiagram.svg.convertToId(parentEdgeId)).attr("style",function(d){var style;return d.hasOwnProperty("backgroundColor")&&(style="brace"==d.ShapeType||"arc"==d.ShapeType?"fill-opacity:0; ":"Label"==d.nodeType&&"#ffffff"==d.backgroundColor?"":"fill:"+d.backgroundColor+"; fill-opacity:1; "),style}).each(function(d){var thisNodeContainer=d3.select(this);d.width||(d.width=defaultAnchorWidth),d.height||(d.height=defaultAnchorHeight),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.render(thisNodeContainer,d)})}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.node.EntityNode=function(){"use strict";function render(args){if(!args.data)throw new Error("EntityNode data missing.");if(!args.pathway)throw new Error("Pathway not specified for this EntityNode. Pathway is needed for items like setting the Organism for DataNode annotations.");pathvisiojs.view.pathwayDiagram.svg.node.render(args,function(nodeContainer){if(nodeContainer.attr("class",function(d){var cssClass="node entity-node "+pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName(d.nodeType)+" ";return"DataNode"===d.nodeType&&(cssClass+=pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName(d.dataNodeType)+" ",cssClass+=pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName("label-"+decodeURIComponent(d.text.line[0]))+" ",d.DatasourceReference&&(cssClass+="has-xref ",cssClass+=pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName("xref-"+decodeURIComponent(d.DatasourceReference.ID+","+d.DatasourceReference.Database))+" ")),d.hasOwnProperty("CellularComponent")&&(cssClass+="cellular-component "+pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName(d.CellularComponent)+" "),cssClass}),"DataNode"===args.data.nodeType){var notDragged=!0;nodeContainer.on("mousedown",function(){notDragged=!0}).on("mousemove",function(){notDragged=!1}).on("mouseup",function(d){if(notDragged){var dfId=null,dfDb=null;d.DatasourceReference&&d.DatasourceReference.ID&&d.DatasourceReference.Database&&(dfId=d.DatasourceReference.ID,dfDb=d.DatasourceReference.Database),pathvisiojs.view.annotation.xRef.render(args.pathway.Organism,dfId,dfDb,d.text.line.join(" "),d.dataNodeType)}})}})}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape=function(){"use strict";function render(parent,data){var re,pathShapeNameToUse=strcase.camelCase(data.ShapeType);pathvisiojs.view.pathwayDiagram.svg.node.pathShape.hasOwnProperty(pathShapeNameToUse)||(re=/Double$/gi,pathShapeNameToUse=pathShapeNameToUse.replace(re,""),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.hasOwnProperty(pathShapeNameToUse)?console.warn('Requested pathShape "'+data.ShapeType+'" is not available with linetype of "Double". Using linetype of "Solid" instead'):(console.warn('Requested pathShape "'+data.ShapeType+'" is not available. Using pathShape "rounded-rectangle" instead'),pathShapeNameToUse="roundedRectangle"));var style=parent.attr("style");parent.attr("style",function(d){return d.hasOwnProperty("borderColor")&&"Label"!=d.nodeType&&(style+="stroke:"+d.borderColor+"; "),style});var stroke=1,transform="",g=parent.insert("g",":first-child");g.attr("stroke-width",function(d){return isNaN(d.borderWidth)||(stroke=d.borderWidth),stroke}).attr("transform",function(d){return d.rotate&&(transform+=" rotate("+d.rotate+","+d.width/2+","+d.height/2+")"),transform});var nodeAttributes=pathvisiojs.view.pathwayDiagram.svg.node.pathShape[pathShapeNameToUse].getAttributes(data.width,data.height,data.borderWidth);nodeAttributes.forEach(function(attribute){"true"==attribute.scale&&g.attr("stroke-width",function(d){return stroke/((d.width+d.height)/200)}).attr("transform",function(d){return transform+=" scale("+d.width/100+", "+d.height/100+")"});var child="path",names=[attribute.name],paths=[attribute.path];attribute.alt&&(child=attribute.alt,names=attribute.name,paths=attribute.path);for(var childElement=g.append(child),i=0;i<names.length;i++)childElement.attr(names[i],paths[i])})}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.arc=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m99.5,50c0,27.338341 -22.162117,49.5 -49.5,49.5s-49.5,-22.161659 -49.5,-49.5"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.brace=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m1.5,98.5c0,-32.50001 8.16667,-48.75 24.5,-48.75s24.5,-16.25001 24.5,-48.75c0,32.49999 8.16666,48.75 24.49999,48.75s24.5,16.24999 24.5,48.75"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.complex=function(){"use strict";function getAttributes(nodeWidth,nodeHeight){var attributes=[{name:"d",path:"M 18 0 L "+(0+nodeWidth-18)+" "+0+" L "+(0+nodeWidth)+" "+18+" L "+(0+nodeWidth)+" "+(0+nodeHeight-18)+" L "+(0+nodeWidth-18)+" "+(0+nodeHeight)+" L "+18+" "+(0+nodeHeight)+" L "+0+" "+(0+nodeHeight-18)+" L "+0+" "+18+" Z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.endoplasmicReticulum=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m73.52756,56.60967c-5.62457,-18.60675 23.51463,-32.43358 23.40173,-45.06604c-0.34426,-4.86102 -10.48934,-8.89743 -18.28974,-5.33395c-17.04119,7.87556 -15.64949,29.30503 -21.20533,42.23387c-0.35661,3.60951 -7.36274,2.46926 -7.74964,-0.48694c-5.8512,-11.38871 17.13534,-24.48692 5.96075,-29.42586c-19.63467,-8.16979 -28.75184,21.15346 -22.0682,28.81784c7.4956,14.17602 -2.17949,24.40679 -6.74689,15.49637c-2.44209,-5.30613 6.06605,-11.08445 -0.80351,-16.17689c-4.31991,-2.79993 -11.75555,-0.64618 -16.15468,3.0943c-12.89117,10.73799 4.72957,40.98145 20.96467,36.14635c4.69833,-1.95989 -3.23603,-8.70151 3.90717,-9.59951c7.29767,-0.81255 5.17628,6.18889 7.68745,9.22691c2.3071,4.0509 4.83232,8.35538 10.7626,11.6237c4.78642,2.53724 15.29437,2.11225 16.77148,-1.95795c2.0318,-9.26291 -26.11129,-28.35848 -10.68903,-31.2815c18.55524,-2.71473 4.74866,23.84573 24.31006,29.69419c9.50188,2.02824 15.63902,-0.62194 14.81255,-4.03272c-2.74586,-11.26327 -25.13557,-22.6802 -24.96441,-33.14968"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.golgiApparatus=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m58.4671,16.99297c-22.2053,-19.30712 37.3101,-19.538 25.5673,-3.1145c-8.8077,11.998 -17.0665,37.53828 -0.9417,64.06707c13.3147,17.47735 -41.7485,17.92546 -27.7555,-0.94919c11.3458,-18.99656 10.2868,-51.87342 3.1299,-60.00338l0,0z"},{name:"d",path:"m31.2144,22.48219c-10.7917,-13.83614 29.8976,-12.81612 18.4075,0.4332c-4.067,4.79263 -5.7828,39.75796 1.1607,48.44653c8.5294,12.0082 -32.853,12.49764 -20.5002,-1.45349c6.9528,-11.2083 10.4738,-33.76451 0.932,-47.42624l0,0z"},{name:"d",path:"m29.80396,32.77896c1.58418,7.4093 2.72346,10.80737 -1.48298,24.77019c-3.73195,8.38708 -3.6004,10.5513 -11.73233,12.53496c-6.6833,1.07092 -11.86483,-6.32111 -4.7933,-10.40477c4.85573,-3.63095 6.14109,-7.02681 6.65889,-14.82198c-0.23922,-6.14805 0.8145,-10.21755 -5.36692,-12.88742c-7.62432,-1.41744 -6.08804,-10.67651 4.82406,-8.95195c5.84935,0.66319 10.2824,5.52823 11.89258,9.76096z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.gridSquare=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m1,1l99,0l0,99l-99,0l0,-99z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.hexagon=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m1.42004,50.99635l21.07262,-42.13943l56.19152,0l21.0667,42.13943l-21.0667,42.14507l-56.19152,0l-21.07262,-42.14507z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.mimDegradation=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m8,50c0,-23.20442 18.79558,-42 42,-42c23.20442,0 42,18.79558 42,42c0,23.20442 -18.79558,42 -42,42c-23.20442,0 -42,-18.79558 -42,-42z"},{name:"d",path:"m1,1l99,99"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.mitochondria=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m0,50c0,-27.62431 22.37569,-50 50,-50c27.62431,0 50,22.37569 50,50c0,27.62431 -22.37569,50 -50,50c-27.62431,0 -50,-22.37569 -50,-50z"},{name:"d",path:"m14.894899,26.347357c4.363817,-0.741571 3.827518,17.036169 8.182638,16.183825c8.27347,0.030762 2.982006,-28.148991 9.899754,-28.336687c6.967995,-0.187704 2.246651,29.947527 9.204983,29.43981c7.632813,-0.560024 0.507309,-32.935357 8.136253,-33.623082c7.698521,-0.689259 2.919197,32.039941 10.628349,32.224557c6.546684,0.160011 3.026451,-27.642808 9.56057,-26.921232c7.192177,0.79388 0.664818,29.842905 7.781624,31.667604c4.748405,1.215439 4.420822,-18.257757 9.204018,-17.440804c11.128883,7.577278 8.628105,37.698658 -2.179977,44.645138c-3.138542,0.698479 -3.965698,-10.502029 -7.112938,-9.905075c-5.59005,1.058502 -3.982124,22.284088 -9.603096,21.799461c-5.239281,-0.456947 -2.226364,-21.636383 -7.47047,-21.730232c-6.961235,-0.116928 -3.357895,28.924408 -10.316231,28.495148c-6.140846,-0.375397 -1.73064,-24.950363 -7.825104,-26.191963c-5.681847,-1.156982 -5.378429,22.170242 -11.027426,20.680939c-6.249069,-1.644684 -0.469624,-26.673519 -6.759275,-27.865887c-3.728954,-0.706188 -2.647665,14.400654 -6.403677,14.545292c-14.016198,-5.938736 -15.748776,-39.707981 -3.899994,-47.666811z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.none=function(){"use strict";function getAttributes(){var attributes=[{name:"d",path:"M0 0"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.oval=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m0,50c0,-27.62431 22.37569,-50 50,-50c27.62431,0 50,22.37569 50,50c0,27.62431 -22.37569,50 -50,50c-27.62431,0 -50,-22.37569 -50,-50z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.ovalDouble=function(){"use strict";function getAttributes(nodeWidth,nodeHeight){var attributes=[{name:["ry","rx","cy","cx"],alt:"ellipse",path:[nodeHeight/2,nodeWidth/2,nodeHeight/2,nodeWidth/2]},{name:["ry","rx","cy","cx"],alt:"ellipse",path:[nodeHeight/2-6,nodeWidth/2-6,nodeHeight/2,nodeWidth/2]}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.pentagon=function(){"use strict";function getAttributes(nodeWidth,nodeHeight){var attributes=[{name:"d",path:"m0,"+.81*nodeHeight+"l0,-"+.62*nodeHeight+"l"+.62*nodeWidth+",-"+.19*nodeHeight+"l"+.38*nodeWidth+","+.5*nodeHeight+"l-"+.38*nodeWidth+","+.5*nodeHeight+"l-"+.62*nodeWidth+",-"+.19*nodeHeight+"z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.rectangle=function(){"use strict";function getAttributes(nodeWidth,nodeHeight){var attributes=[{name:"d",path:"m0,0l"+nodeWidth+",0l0,"+nodeHeight+"l-"+nodeWidth+",0l0,-"+nodeHeight+"z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.roundedRectangle=function(){"use strict";function getAttributes(nodeWidth,nodeHeight){var attributes=[{name:"d",path:"m0,10c0,-5.43379 4.56621,-10 10,-10l"+(nodeWidth-20)+",0c5.43379,0 10,4.56621 10,10l0,"+(nodeHeight-20)+"c0,5.43379 -4.56621,10 -10,10l"+(20-nodeWidth)+",0c-5.43379,0 -10,-4.56621 -10,-10l0,"+(20-nodeHeight)+"z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.roundedRectangleDouble=function(){"use strict";function getAttributes(nodeWidth,nodeHeight){var attributes=[{name:"d",path:"m6,13c0,-3.80365 3.19635,-7 7,-7l"+(nodeWidth-26)+",0c3.80365,0 7,3.19635 7,7l0,"+(nodeHeight-26)+"c0,3.80365 -3.19635,7 -7,7l"+(26-nodeWidth)+",0c-3.80365,0 -7,-3.19635 -7,-7l0,"+(26-nodeHeight)+"z"},{name:"d",path:"m0,10c0,-5.43379 4.56621,-10 10,-10l"+(nodeWidth-20)+",0c5.43379,0 10,4.56621 10,10l0,"+(nodeHeight-20)+"c0,5.43379 -4.56621,10 -10,10l"+(20-nodeWidth)+",0c-5.43379,0 -10,-4.56621 -10,-10l0,"+(20-nodeHeight)+"z"}];
return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.sarcoplasmicReticulum=function(){"use strict";function getAttributes(){var attributes=[{name:"d",scale:"true",path:"m46.60182,1.40724c-32.37224,1.34138 -36.32004,22.77011 -26.50318,38.12777c9.31826,18.3425 -18.7656,30.15016 2.56955,49.37807c16.82126,13.11594 46.33175,6.10508 52.12638,-8.56826c5.89916,-15.24847 -10.95099,-26.0272 -3.29316,-40.96135c10.85342,-19.88432 -0.77615,-38.13043 -24.89959,-37.97624z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.pathShape.triangle=function(){"use strict";function getAttributes(nodeWidth,nodeHeight){var attributes=[{name:"d",path:"m0,"+nodeHeight+"l0,-"+nodeHeight+"l"+nodeWidth+","+nodeHeight/2+"l-"+nodeWidth+","+nodeHeight/2+"z"}];return attributes}return{getAttributes:getAttributes}}(),pathvisiojs.view.pathwayDiagram.svg.node.text=function(){"use strict";function render(nodeContainer,data){var cache={};cache.padding=5;var text={};text.cache={},text.cache.fontSize=12,text.cache.alignmentBaseline=data.text.verticalAlign,text.cache.textAnchor=function(){return"left"==data.text.textAlign?"start":"right"==data.text.textAlign?"end":"middle"},text.cache.x=function(){return"left"==data.text.textAlign?-1*data.width/2:"right"==data.text.textAlign?data.width/2:0},text.cache.translate={},text.cache.translate.dx=data.width/2,text.cache.translate.dy=data.height/2,text.line={},text.line.cache={},text.line.cache.y=[];var textLineCount=data.text.line.length,i=0;data.text.line.forEach(function(){text.line.cache.y.push(i*text.cache.fontSize),i+=1});var textArea=nodeContainer.selectAll("g.text-area").data(function(){return[data]}).enter().append("g").attr("id",function(d){return"text-container"+pathvisiojs.view.pathwayDiagram.svg.convertToId(d.id)}).attr("transform",function(){return"translate("+text.cache.translate.dx+" "+text.cache.translate.dy+")"}).attr("class","text-area").attr("style",function(d){var style="";return d.text.hasOwnProperty("color")&&(style+="fill:"+d.text.color+"; "),d.text.hasOwnProperty("fontFamily")&&(style+="font-family:"+d.text.fontFamily+"; "),d.text.hasOwnProperty("fontSize")&&(style+="font-size:"+d.text.fontSize+"px; "),d.text.hasOwnProperty("fontWeight")&&(style+="font-weight:"+d.text.fontWeight+"; "),d.text.hasOwnProperty("fontStyle")&&(style+="font-style:"+d.text.fontStyle+"; "),style});return textArea.selectAll("text").data(function(d){return d.text.line}).enter().append("text").attr("id",function(d,i){return"text-line"+i}).attr("x",text.cache.x).attr("y",function(d,i){return 1.1*(i-(textLineCount-1)/2)+"em"}).attr("alignment-baseline",text.cache.alignmentBaseline).attr("text-anchor",text.cache.textAnchor).text(function(d){return d}),nodeContainer}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.node.groupNode=function(){"use strict";function render(args,callback){if(!args.container)throw new Error("Error: container element not specified for rendering groupNode.");if(!args.data)throw new Error("Error: group data missing for rendering groupNode.");pathvisiojs.view.pathwayDiagram.svg.node.render(args,function(groupContainer){groupContainer.attr("class",function(d){var cssClass="node group-node "+pathvisiojs.view.pathwayDiagram.svg.convertToCssClassName(d.groupType)+" ";return cssClass});var groupContents=args.data.contains;callback(groupContainer,groupContents)})}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.node.useElement=function(){"use strict";function render(parent,data){parent.append("use").data([data]).attr("id",function(d){return"node-"+pathvisiojs.view.pathwayDiagram.svg.convertToId(d.id)}).attr("class",function(){return"symbol "}).attr("transform",function(d){var transform="scale(1)";return d.hasOwnProperty("rotation")&&(transform="rotate("+d.rotation+" "+d.width/2+" "+d.height/2+")"),transform}).attr("x",0).attr("y",0).attr("width",function(d){return d.width}).attr("height",function(d){return d.height}).attr("style",function(data){var style="";data.hasOwnProperty("borderColor")&&(style+="stroke:"+data.borderColor+"; ");var borderWidthEffective;return borderWidthEffective=data.hasOwnProperty("borderWidth")?2*data.borderWidth:2,style+="stroke-width:"+borderWidthEffective+"; "}).attr("xlink:xlink:href",function(d){var shapeType=strcase.paramCase(d.ShapeType),symbolId=pathvisiojs.view.pathwayDiagram.svg.symbol.semanticNameToIdMapping[shapeType];return"#"+symbolId})}function getPortCoordinates(boxDimensions,relX,relY){var port={};return port.x=boxDimensions.x+relX*boxDimensions.width,port.y=boxDimensions.y+relY*boxDimensions.height,port}function highlightByLabel(svg,pathway,nodeLabel){svg.selectAll(".highlighted-node").remove();var dataNodesWithText=pathway.elements.filter(function(d){return"data-node"===d.nodeType&&!!d.textLabel}),selectedNodes=dataNodesWithText.filter(function(d){return-1!==d.textLabel.text.indexOf(nodeLabel)});selectedNodes.forEach(function(node){var nodeDomElement=svg.select("#node-"+node.id),height=nodeDomElement[0][0].getBBox().height,width=nodeDomElement[0][0].getBBox().width;nodeDomElement.append("rect").attr("class","highlighted-node").attr("x",-2.5).attr("y",-2.5).attr("width",width+5).attr("height",height+5)})}return{render:render,getPortCoordinates:getPortCoordinates,highlightByLabel:highlightByLabel}}(),pathvisiojs.view.pathwayDiagram.svg.edge=function(){"use strict";function getPointAtPositionById(edgeElementId,position){var edgeElement=d3.select("#"+pathvisiojs.view.pathwayDiagram.svg.convertToId(edgeElementId))[0][0],totalLength=edgeElement.getTotalLength(),lengthFromStartToPosition=position*totalLength,point=edgeElement.getPointAtLength(lengthFromStartToPosition);return point}function render(args,callback){var parentDataElement,svg=args.svg,edge=args.element;if(!svg)throw new Error("svg missing");var pathway=args.pathway;if(!pathway)throw new Error("pathway missing");var data=args.data;if(!data)throw new Error("data missing");var container=args.container;if(!container)throw new Error("container missing");var markerStartName=args.data.markerStart,markerEndName=args.data.markerEnd,edgeId=pathvisiojs.view.pathwayDiagram.svg.convertToId(data.id);data.hasOwnProperty("isContainedBy")&&(parentDataElement=pathway.elements.filter(function(element){return element.id===data.isContainedBy})[0],data.Point.forEach(function(point){point.x=point.x-parentDataElement.x,point.y=point.y-parentDataElement.y}));var markerStartAttributeValue,markerEndAttributeValue,stroke=data.stroke;async.series({markerStartAttributeValue:function(callback){var markerStartIdStub=pathvisiojs.view.pathwayDiagram.svg.edge.marker.semanticNameToIdMapping[markerStartName];markerStartIdStub?stroke?"none"===markerStartName?(markerStartAttributeValue="none",callback(null,markerStartAttributeValue)):-1===pathvisiojs.view.pathwayDiagram.svg.edge.marker.colorsAvailable[markerStartIdStub].indexOf(stroke)?pathvisiojs.view.pathwayDiagram.svg.edge.marker.appendNonDefaultColorMarkerBothEnds(svg,markerStartIdStub,stroke,function(){markerStartAttributeValue="url(#"+strcase.paramCase(markerStartIdStub+"-start-"+stroke)+")",callback(null,markerStartAttributeValue)}):(markerStartAttributeValue="url(#"+strcase.paramCase(markerStartIdStub+"-start-"+stroke)+")",callback(null,markerStartAttributeValue)):(markerStartAttributeValue="url(#"+strcase.paramCase(markerStartIdStub+"-start-default")+")",callback(null,markerStartAttributeValue)):(console.warn('Pathvisiojs does not have access to a marker (arrowhead) of the requested type: "'+markerStartName+'"'),markerStartAttributeValue="none",callback(null,markerStartAttributeValue))},markerEndAttributeValue:function(callback){var markerEndIdStub=pathvisiojs.view.pathwayDiagram.svg.edge.marker.semanticNameToIdMapping[markerEndName];markerEndIdStub?stroke?"none"===markerEndName?(markerEndAttributeValue="none",callback(null,markerEndAttributeValue)):-1===pathvisiojs.view.pathwayDiagram.svg.edge.marker.colorsAvailable[markerEndIdStub].indexOf(stroke)?pathvisiojs.view.pathwayDiagram.svg.edge.marker.appendNonDefaultColorMarkerBothEnds(svg,markerEndIdStub,stroke,function(){markerEndAttributeValue="url(#"+strcase.paramCase(markerEndIdStub+"-end-"+stroke)+")",callback(null,markerEndAttributeValue)}):(markerEndAttributeValue="url(#"+strcase.paramCase(markerEndIdStub+"-end-"+stroke)+")",callback(null,markerEndAttributeValue)):(markerEndAttributeValue="url(#"+strcase.paramCase(markerEndIdStub+"-end-default")+")",callback(null,markerEndAttributeValue)):(console.warn('Pathvisiojs does not have access to a marker (arrowhead) of the requested type: "'+markerEndName+'"'),markerEndAttributeValue="none",callback(null,markerEndAttributeValue))},path:function(){edge.attr("marker-start",markerStartAttributeValue).attr("marker-end",markerEndAttributeValue).attr("style",function(data){var style="stroke-width:"+data.strokeWidth+"; ";return data.hasOwnProperty("stroke")&&(style+="stroke:#"+data.stroke+"; "),data.hasOwnProperty("strokeStyle")&&"double"===data.strokeStyle&&(style+="stroke-width:"+3*data.strokeWidth+"; "),style}).attr("fill","none").attr("d",function(data){return pathvisiojs.view.pathwayDiagram.svg.edge.path.getPath(data)}),data.hasOwnProperty("Anchor")&&pathvisiojs.view.pathwayDiagram.svg.node.anchor.render(container,edgeId,data.Anchor),data.hasOwnProperty("PublicationXref")?(pathvisiojs.view.pathwayDiagram.svg.publicationXref.render(edgeId,"edge",pathway,data.PublicationXref),callback(edge)):callback(edge)}})}return{render:render,getPointAtPositionById:getPointAtPositionById}}(),pathvisiojs.view.pathwayDiagram.svg.edge.graphicalLine=function(){"use strict";function render(args){args.svg;var container=args.container;args.data,pathvisiojs.view.pathwayDiagram.svg.edge.render(args,function(graphicalLine){graphicalLine.attr("class",function(data){var cssClass="edge graphical-line";return data.hasOwnProperty("strokeStyle")&&"dashed"===data.strokeStyle&&(cssClass+=" dashed-stroke"),cssClass});var containerElementX,containerElementY,containerElement=container[0][0];containerElement.hasOwnProperty("__data__")&&graphicalLine.attr("transform",function(){return containerElementX=containerElement.__data__.x||0,containerElementY=containerElement.__data__.y||0,"translate("+-1*containerElementX+" "+-1*containerElementY+")"})})}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.edge.interaction=function(){"use strict";function render(args){args.svg;var firstInteractionGraph,lastInteractionGraph,container=args.container,data=args.data;data.InteractionGraph&&(data.InteractionGraph.length>1?(firstInteractionGraph=data.InteractionGraph[0],lastInteractionGraph=data.InteractionGraph[data.InteractionGraph.length-1]):lastInteractionGraph=data.InteractionGraph[0]),pathvisiojs.view.pathwayDiagram.svg.edge.render(args,function(interaction){interaction.attr("class",function(data){var cssClass="edge interaction ";return data.DatasourceReference&&(cssClass+="has-xref ",data.DatasourceReference.ID&&interaction.on("click",function(d){pathvisiojs.view.annotation.xRef.render(args.pathway.Organism,d.DatasourceReference.ID,d.DatasourceReference.Database,d.renderableType,d.markerStart+"<-->"+d.markerEnd)})),data.hasOwnProperty("strokeStyle")&&"dashed"===data.strokeStyle&&(cssClass+=" dashed-stroke"),cssClass});var containerElementX,containerElementY,containerElement=container[0][0];containerElement.hasOwnProperty("__data__")&&interaction.attr("transform",function(){return containerElementX=containerElement.__data__.x||0,containerElementY=containerElement.__data__.y||0,"translate("+-1*containerElementX+" "+-1*containerElementY+")"})})}return{render:render}}(),pathvisiojs.view.pathwayDiagram.svg.edge.marker=function(){"use strict";function appendCustom(uniqueMarkerShapeUri,callback){var idStub=strcase.paramCase(uniqueMarkerShapeUri),startId=idStub+"-start-default",endId=idStub+"-end-default",markerStart=svg.select("defs").select("#"+startId);markerStart=svg.select("defs").append("marker").attr("id",startId).attr("preserveAspectRatio","none"),processSvg(uniqueMarkerShapeUri,markerStart,startId,!1);var markerEnd=svg.select("defs").select("#"+endId);markerEnd=svg.select("defs").append("marker").attr("id",endId).attr("preserveAspectRatio","none"),processSvg(uniqueMarkerShapeUri,markerEnd,endId,!0),callback(null)}function processSvg(uniqueMarkerShapeUri,marker,markerId,rotate){d3.xml(uniqueMarkerShapeUri,"image/svg+xml",function(svgXml){var newMarker=d3.select(svgXml.documentElement),width=newMarker.attr("width"),height=newMarker.attr("height"),markerClass=newMarker.attr("class"),refXstart=newMarker.attr("refXstart"),refYstart=newMarker.attr("refYstart"),refXend=newMarker.attr("refXend"),refYend=newMarker.attr("refYend"),viewBox=newMarker.attr("viewBox");marker.attr("viewBox",viewBox).attr("markerWidth",width).attr("markerHeight",height).attr("markerUnits","strokeWidth").attr("orient","auto"),rotate?(marker.attr("refX",refXend).attr("refY",refYend),marker.append("g").attr("id","g-"+markerId).attr("class",markerClass).attr("transform","rotate(180, "+width/2+", "+height/2+")")):(marker.attr("refX",refXstart).attr("refY",refYstart),marker.append("g").attr("id","g-"+markerId).attr("class",markerClass));var g=document.querySelector("#g-"+markerId),newMarkerChildren=newMarker[0][0].childNodes;do g.appendChild(newMarkerChildren[0]);while(newMarkerChildren.length>0)})}function loadAllCustom(thisSvg,customMarkers,callback){svg=thisSvg;var semanticName,markerUri,paramCaseUri,uniqueMarkerShapeUris=[];customMarkers.forEach(function(customMarker){semanticName=customMarker.semanticName,markerUri=customMarker.uri,paramCaseUri=strcase.paramCase(markerUri),pathvisiojs.view.pathwayDiagram.svg.edge.marker.semanticNameToIdMapping[semanticName]=paramCaseUri,pathvisiojs.view.pathwayDiagram.svg.edge.marker.colorsAvailable[paramCaseUri]=["default"],-1===uniqueMarkerShapeUris.indexOf(markerUri)&&uniqueMarkerShapeUris.push(markerUri)}),async.each(uniqueMarkerShapeUris,appendCustom,function(){callback(null)})}function appendNonDefaultColorMarkerBothEnds(svg,markerIdStub,color,callback){appendNonDefaultColorMarker(svg,markerIdStub,"start",color,function(){appendNonDefaultColorMarker(svg,markerIdStub,"end",color,function(){pathvisiojs.view.pathwayDiagram.svg.edge.marker.colorsAvailable[markerIdStub].push(color),callback()})})}function appendNonDefaultColorMarker(svg,markerIdStub,position,color,callback){var defaultMarker,refX,refY,viewBox,viewBoxElements,defaultId=markerIdStub+"-"+position+"-default",marker=pathvisiojs.utilities.cloneNode("#"+defaultId);"end"===position&&(defaultMarker=d3.select("#"+markerIdStub+"-"+position+"-default"),refX=parseFloat(defaultMarker.attr("refX")),refY=parseFloat(defaultMarker.attr("refY")),viewBox=defaultMarker.attr("viewBox"),viewBox&&(viewBoxElements=viewBox.split(" "),marker.attr("viewBox",viewBox)),marker.attr("refX",refX),marker.attr("refY",refY));var markerContents=marker.select("g"),markerStyle=markerContents.attr("style")||"";markerContents.attr("class").match(/default-stroke-color/)&&(markerStyle+="stroke:#"+color+"; "),markerContents.attr("class").match(/default-fill-color/)&&(markerStyle+="fill:#"+color+"; ");var markerId=markerIdStub+"-"+position+"-"+color;marker.attr("id",markerId),markerContents.attr("id",strcase.paramCase("g-"+markerId)),markerContents.attr("style",markerStyle),callback(markerId)}var svg,semanticNameToIdMapping={arrow:"shape-library-markers-arrow-svg","necessary-stimulation":"shape-library-markers-mim-necessary-stimulation-svg",binding:"shape-library-markers-mim-binding-svg",conversion:"shape-library-markers-mim-conversion-svg",stimulation:"shape-library-markers-mim-stimulation-svg",modification:"shape-library-markers-mim-modification-svg",catalysis:"shape-library-markers-mim-catalysis-svg",inhibition:"shape-library-markers-mim-inhibition-svg",cleavage:"shape-library-markers-mim-cleavage-svg","covalent-bond":"shape-library-markers-mim-covalent-bond-svg","transcription-translation":"shape-library-markers-mim-transcription-translation-svg",gap:"shape-library-markers-mim-gap-svg","inhibitory-activity":"shape-library-markers-t-bar-svg",unspecified:"shape-library-markers-none-svg",activity:"shape-library-markers-arrow-svg","mim-branching-left":"shape-library-markers-mim-branching-left-svg","mim-branching-right":"shape-library-markers-mim-branching-right-svg","mim-necessary-stimulation":"shape-library-markers-mim-necessary-stimulation-svg","mim-binding":"shape-library-markers-mim-binding-svg","mim-conversion":"shape-library-markers-mim-conversion-svg","mim-stimulation":"shape-library-markers-mim-stimulation-svg","mim-modification":"shape-library-markers-mim-modification-svg","mim-catalysis":"shape-library-markers-mim-catalysis-svg","mim-inhibition":"shape-library-markers-mim-inhibition-svg","mim-cleavage":"shape-library-markers-mim-cleavage-svg","mim-covalent-bond":"shape-library-markers-mim-covalent-bond-svg","mim-transcription-translation":"shape-library-markers-mim-transcription-translation-svg","mim-gap":"shape-library-markers-mim-gap-svg","t-bar":"shape-library-markers-t-bar-svg",none:"shape-library-markers-none-svg"},colorsAvailable={"shape-library-markers-arrow-svg":["default"],"shape-library-markers-mim-necessary-stimulation-svg":["default"],"shape-library-markers-mim-binding-svg":["default"],"shape-library-markers-mim-conversion-svg":["default"],"shape-library-markers-mim-stimulation-svg":["default"],"shape-library-markers-mim-modification-svg":["default"],"shape-library-markers-mim-catalysis-svg":["default"],"shape-library-markers-mim-inhibition-svg":["default"],"shape-library-markers-mim-cleavage-svg":["default"],"shape-library-markers-mim-covalent-bond-svg":["default"],"shape-library-markers-mim-transcription-translation-svg":["default"],"shape-library-markers-mim-gap-svg":["default"],"shape-library-markers-t-bar-svg":["default"],"shape-library-markers-mim-branching-left-svg":["default"],"shape-library-markers-mim-branching-right-svg":["default"],"shape-library-markers-none-svg":["default"]};return{appendNonDefaultColorMarkerBothEnds:appendNonDefaultColorMarkerBothEnds,loadAllCustom:loadAllCustom,semanticNameToIdMapping:semanticNameToIdMapping,colorsAvailable:colorsAvailable}}(),pathvisiojs.view.pathwayDiagram.svg.edge.point=function(){"use strict";function getGraphRef(pathway,point){if(point.hasOwnProperty("graphRef")){if(pathway.hasOwnProperty("nodes")){var node=pathway.nodes.filter(function(element){return element.graphId===point.graphRef})[0];if(void 0!==node)return{type:"node",element:node}}if(pathway.hasOwnProperty("groups")){var group=pathway.groups.filter(function(element){return element.graphId===point.graphRef})[0];if(void 0!==group)return{type:"group",groupId:group.groupId}}var edgesWithAnchors=pathway.edges.filter(function(element){return element.hasOwnProperty("anchors")}),anchor=null,i=-1;do i+=1,anchor=edgesWithAnchors[i].anchors.filter(function(element){return element.graphId===point.graphRef})[0];while(!anchor&&i<edgesWithAnchors.length);return{type:"anchor",element:anchor,edge:edgesWithAnchors[i]}}return{type:"unconnected"}}function getCoordinates(pathway,point){if(!pathway||!point)return console.warn("Error: Missing input parameters.");var coordinates={},edgeTerminusRef=getGraphRef(pathway,point);if("anchor"!==edgeTerminusRef.type)if("unconnected"===edgeTerminusRef.type)coordinates.x=point.x,coordinates.y=point.y;else if("node"===edgeTerminusRef.type)coordinates=pathvisiojs.view.pathwayDiagram.svg.node.getPortCoordinates(edgeTerminusRef.element,point.relX,point.relY);else{if("group"!==edgeTerminusRef.type)return"error";var groupDimensions=pathvisiojs.view.pathwayDiagram.svg.node.groupNode.getDimensions(pathway,edgeTerminusRef.groupId);coordinates=pathvisiojs.view.pathwayDiagram.svg.node.getPortCoordinates(groupDimensions,point.relX,point.relY)}else{var path=document.select("#interaction-"+edgeTerminusRef.edge.graphId)[0][0];coordinates=path.getPointAtLength(edgeTerminusRef.element.position*path.getTotalLength())}return coordinates}function isTwoPointElbow(source,target){var isRightAngle=Math.abs(source.dx)===Math.abs(target.dy)&&Math.abs(source.dy)===Math.abs(target.dx),sourcePasses=(target.x-source.x)/Math.abs(target.x-source.x)===source.dx||(target.y-source.y)/Math.abs(target.y-source.y)===source.dy,targetPasses=(source.x-target.x)/Math.abs(source.x-target.x)===target.dx||(source.y-target.y)/Math.abs(source.y-target.y)===target.dy;return isRightAngle&&sourcePasses&&targetPasses}return{getGraphRef:getGraphRef,getCoordinates:getCoordinates,isTwoPointElbow:isTwoPointElbow}}(),pathvisiojs.view.pathwayDiagram.svg.edge.path=function(){"use strict";function getPath(edge){var type=edge.ConnectorType;return"Straight"==type?2==edge.Point.length?svgLine(edge.Point):(console.log("Too many points for a straight line!"),null):"Segmented"==type?svgLine(edge.Point):"Elbow"==type?svgLine(calcPathpoints(edge.Point)):"Curved"==type?svgCurve(calcPathpoints(edge.Point)):(console.log("Unknown connector type: "+type),null)}function calcPathpoints(p){2==p.length&&(p=calcAllWaypoints(p));var ppts=[];ppts[0]=p[0];var i,axis=getAxis(p[0]);for(i=1;i<p.length;i++){var dy=p[i].y-p[i-1].y,dx=p[i].x-p[i-1].x;ppts[i]=1==axis?{x:p[i-1].x,y:p[i-1].y+dy}:{x:p[i-1].x+dx,y:p[i-1].y},axis=(axis+1)%2}return ppts[p.length]=p[p.length-1],ppts}function calcAllWaypoints(p){var wptCount=getNumWaypoints(p),offset=20,start=p[0],end=p[1],wpts=[];return wpts[0]=start,0==wptCount||(1==wptCount?wpts[1]=calcWaypoint(start,end,getAxis(start),getDir(end)):2==wptCount?(wpts[1]=calcWaypoint(start,{x:end.x+offset*getDir(end),y:end.y+offset*getDir(end)},getAxis(start),getDir(start)),wpts[2]=calcWaypoint(end,wpts[1],getAxis(end),getDir(end))):3==wptCount?(wpts[2]={x:start.x+(end.x-start.x)/2,y:start.y+(end.y-start.y)/2},wpts[1]=calcWaypoint(start,wpts[2],getAxis(start),getDir(start)),wpts[3]=calcWaypoint(end,wpts[2],getAxis(end),getDir(end))):console.log("Too many waypoint estimated!!!")),wpts[wptCount+1]=end,wpts}function calcWaypoint(start,end,axis,dir){var offset=20,x=0,y=0;return 1==axis?(x=start.x+(end.x-start.x)/2,y=start.y+offset*dir):(x=start.x+offset*dir,y=start.y+(end.y-start.y)/2),{x:x,y:y}}function getNumWaypoints(pts){var start=pts[0],end=pts[1],leftToRight=sign(end.x-start.x)>0,left=leftToRight?start:end,right=leftToRight?end:start,leftIsBottom=sign(left.y-right.y)<0,z=leftIsBottom?1:0,x=leftToRight?getSide(start):getSide(end),y=leftToRight?getSide(end):getSide(start),wptMatrix=[[[1,1],[2,2],[1,3],[0,2]],[[2,0],[1,1],[0,2],[1,1]],[[3,1],[2,2],[1,1],[2,0]],[[2,2],[3,3],[2,2],[1,1]]];return wptMatrix[x][y][z]}function sign(x){return x?0>x?-1:1:0}function getSide(p){return Math.abs(p.RelX)>Math.abs(p.RelY)?p.RelX>0?1:3:p.RelY>0?2:0}function getAxis(p){return Math.abs(p.RelX)>Math.abs(p.RelY)?0:1}function getDir(p){return Math.abs(p.RelX)>Math.abs(p.RelY)?p.RelX>0?1:-1:p.RelY>0?1:-1}var svgLine=d3.svg.line().x(function(d){return d.x}).y(function(d){return d.y}).interpolate("linear"),svgCurve=d3.svg.line().x(function(d){return d.x}).y(function(d){return d.y}).interpolate("basis");return{getPath:getPath}}(),pathvisiojs.view.pathwayDiagram.img=function(){"use strict";function load(args,callback){if(!args)throw new Error("Missing input data.");var container=args.container,containerWidth=parseFloat(args.containerWidth),containerHeight=parseFloat(args.containerHeight),fitToContainer=args.fitToContainer,imgUri=args.renderableSourceDataElement.uri;imgUri||(console.warn("No uri specified for sourceData element."),imgUri=args.renderableSourceDataElement.uri||pathvisiojs.config.diagramNotAvailableIconUri),loadImage(imgUri,function(img){"error"===img.type?(console.warn("Error loading image "+imgUri),loadImage(pathvisiojs.config.diagramNotAvailableIconUri,function(img){container[0][0].appendChild(img),callback(null,img)},{maxWidth:containerWidth,maxHeight:containerHeight})):(container[0][0].appendChild(img),img.setAttribute("style","margin: auto; position: absolute; top: 0; left: 0; bottom: 0; right: 0;"),callback(null,img))},{maxWidth:containerWidth,maxHeight:containerHeight,contain:fitToContainer})}return{load:load}}();
